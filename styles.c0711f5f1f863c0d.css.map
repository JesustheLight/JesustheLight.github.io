{"version":3,"sources":["./node_modules/@angular/material/prebuilt-themes/indigo-pink.css","./node_modules/@angular/material/core/ripple/_ripple.scss","./apps/blog/src/styles.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_private.scss","./node_modules/@angular/material/core/style/_layout-common.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/style/_sass-utils.scss","./node_modules/@material/theme/_css.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button/_button-theme-private.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@material/linear-progress/_linear-progress-theme.scss","./node_modules/@material/theme/_gss.scss","./node_modules/@material/dom/_dom.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@angular/material/form-field/_form-field-subscript.scss","./node_modules/@material/typography/_typography.scss","./node_modules/@angular/material/form-field/_form-field-focus-overlay.scss","./node_modules/@angular/material/form-field/_mdc-text-field-theme-variable-refresh.scss","./node_modules/@angular/material/form-field/_form-field-native-select.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-density.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@material/form-field/_form-field.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@material/list/_list.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/button/_icon-button-theme.scss","./node_modules/@angular/material/button/_fab-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss"],"sourcesContent":[".mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale3d(0, 0, 0)}.cdk-high-contrast-active .mat-ripple-element{display:none}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none;left:0}[dir=rtl] .cdk-visually-hidden{left:auto;right:0}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop{transition:visibility 1ms linear,opacity 1ms linear;visibility:hidden;opacity:1}.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0;visibility:visible}.cdk-overlay-backdrop-noop-animation{transition:none}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}.mat-focus-indicator{position:relative}.mat-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-focus-indicator-display, none);border:var(--mat-focus-indicator-border-width, 3px) var(--mat-focus-indicator-border-style, solid) var(--mat-focus-indicator-border-color, transparent);border-radius:var(--mat-focus-indicator-border-radius, 4px)}.mat-focus-indicator:focus::before{content:\"\"}.cdk-high-contrast-active{--mat-focus-indicator-display: block}.mat-mdc-focus-indicator{position:relative}.mat-mdc-focus-indicator::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;display:var(--mat-mdc-focus-indicator-display, none);border:var(--mat-mdc-focus-indicator-border-width, 3px) var(--mat-mdc-focus-indicator-border-style, solid) var(--mat-mdc-focus-indicator-border-color, transparent);border-radius:var(--mat-mdc-focus-indicator-border-radius, 4px)}.mat-mdc-focus-indicator:focus::before{content:\"\"}.cdk-high-contrast-active{--mat-mdc-focus-indicator-display: block}.mat-ripple-element{background-color:rgba(0,0,0,.1)}html{--mat-option-selected-state-label-text-color:#3f51b5;--mat-option-label-text-color:rgba(0, 0, 0, 0.87);--mat-option-hover-state-layer-color:rgba(0, 0, 0, 0.04);--mat-option-focus-state-layer-color:rgba(0, 0, 0, 0.04);--mat-option-selected-state-layer-color:rgba(0, 0, 0, 0.04)}.mat-accent{--mat-option-selected-state-label-text-color:#ff4081}.mat-warn{--mat-option-selected-state-label-text-color:#f44336}html{--mat-optgroup-label-text-color:rgba(0, 0, 0, 0.87)}.mat-pseudo-checkbox-full{color:rgba(0,0,0,.54)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{color:#b0b0b0}.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#3f51b5}.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#3f51b5}.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after{color:#fafafa}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#ff4081}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#ff4081}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after{color:#fafafa}.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#ff4081}.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#ff4081}.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after{color:#fafafa}.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#f44336}.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#f44336}.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after{color:#fafafa}.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after{color:#b0b0b0}.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full{background:#b0b0b0}.mat-app-background{background-color:#fafafa;color:rgba(0,0,0,.87)}.mat-elevation-z0,.mat-mdc-elevation-specific.mat-elevation-z0{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z1,.mat-mdc-elevation-specific.mat-elevation-z1{box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z2,.mat-mdc-elevation-specific.mat-elevation-z2{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z3,.mat-mdc-elevation-specific.mat-elevation-z3{box-shadow:0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z4,.mat-mdc-elevation-specific.mat-elevation-z4{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z5,.mat-mdc-elevation-specific.mat-elevation-z5{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z6,.mat-mdc-elevation-specific.mat-elevation-z6{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z7,.mat-mdc-elevation-specific.mat-elevation-z7{box-shadow:0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12)}.mat-elevation-z8,.mat-mdc-elevation-specific.mat-elevation-z8{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z9,.mat-mdc-elevation-specific.mat-elevation-z9{box-shadow:0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z10,.mat-mdc-elevation-specific.mat-elevation-z10{box-shadow:0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z11,.mat-mdc-elevation-specific.mat-elevation-z11{box-shadow:0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z12,.mat-mdc-elevation-specific.mat-elevation-z12{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z13,.mat-mdc-elevation-specific.mat-elevation-z13{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z14,.mat-mdc-elevation-specific.mat-elevation-z14{box-shadow:0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z15,.mat-mdc-elevation-specific.mat-elevation-z15{box-shadow:0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z16,.mat-mdc-elevation-specific.mat-elevation-z16{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z17,.mat-mdc-elevation-specific.mat-elevation-z17{box-shadow:0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z18,.mat-mdc-elevation-specific.mat-elevation-z18{box-shadow:0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z19,.mat-mdc-elevation-specific.mat-elevation-z19{box-shadow:0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z20,.mat-mdc-elevation-specific.mat-elevation-z20{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z21,.mat-mdc-elevation-specific.mat-elevation-z21{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z22,.mat-mdc-elevation-specific.mat-elevation-z22{box-shadow:0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z23,.mat-mdc-elevation-specific.mat-elevation-z23{box-shadow:0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12)}.mat-elevation-z24,.mat-mdc-elevation-specific.mat-elevation-z24{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12)}.mat-theme-loaded-marker{display:none}html{--mat-option-label-text-font:Roboto, sans-serif;--mat-option-label-text-line-height:24px;--mat-option-label-text-size:16px;--mat-option-label-text-tracking:0.03125em;--mat-option-label-text-weight:400}html{--mat-optgroup-label-text-font:Roboto, sans-serif;--mat-optgroup-label-text-line-height:24px;--mat-optgroup-label-text-size:16px;--mat-optgroup-label-text-tracking:0.03125em;--mat-optgroup-label-text-weight:400}.mat-mdc-card{--mdc-elevated-card-container-color:white;--mdc-elevated-card-container-elevation:0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);--mdc-outlined-card-container-color:white;--mdc-outlined-card-outline-color:rgba(0, 0, 0, 0.12);--mdc-outlined-card-container-elevation:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);--mat-card-subtitle-text-color:rgba(0, 0, 0, 0.54)}.mat-mdc-card{--mat-card-title-text-font:Roboto, sans-serif;--mat-card-title-text-line-height:32px;--mat-card-title-text-size:20px;--mat-card-title-text-tracking:0.0125em;--mat-card-title-text-weight:500;--mat-card-subtitle-text-font:Roboto, sans-serif;--mat-card-subtitle-text-line-height:22px;--mat-card-subtitle-text-size:14px;--mat-card-subtitle-text-tracking:0.0071428571em;--mat-card-subtitle-text-weight:500}.mat-mdc-progress-bar{--mdc-linear-progress-active-indicator-color:#3f51b5;--mdc-linear-progress-track-color:rgba(63, 81, 181, 0.25)}@keyframes mdc-linear-progress-buffering{}.mat-mdc-progress-bar .mdc-linear-progress__buffer-dots{background-color:rgba(63, 81, 181, 0.25);background-color:var(--mdc-linear-progress-track-color, rgba(63, 81, 181, 0.25))}@media(forced-colors: active){.mat-mdc-progress-bar .mdc-linear-progress__buffer-dots{background-color:ButtonBorder}}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.mat-mdc-progress-bar .mdc-linear-progress__buffer-dots{background-color:rgba(0,0,0,0);background-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(63, 81, 181, 0.25)'/%3E%3C/svg%3E\")}}.mat-mdc-progress-bar .mdc-linear-progress__buffer-bar{background-color:rgba(63, 81, 181, 0.25);background-color:var(--mdc-linear-progress-track-color, rgba(63, 81, 181, 0.25))}.mat-mdc-progress-bar.mat-accent{--mdc-linear-progress-active-indicator-color:#ff4081;--mdc-linear-progress-track-color:rgba(255, 64, 129, 0.25)}@keyframes mdc-linear-progress-buffering{}.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-dots{background-color:rgba(255, 64, 129, 0.25);background-color:var(--mdc-linear-progress-track-color, rgba(255, 64, 129, 0.25))}@media(forced-colors: active){.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-dots{background-color:ButtonBorder}}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-dots{background-color:rgba(0,0,0,0);background-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 64, 129, 0.25)'/%3E%3C/svg%3E\")}}.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-bar{background-color:rgba(255, 64, 129, 0.25);background-color:var(--mdc-linear-progress-track-color, rgba(255, 64, 129, 0.25))}.mat-mdc-progress-bar.mat-warn{--mdc-linear-progress-active-indicator-color:#f44336;--mdc-linear-progress-track-color:rgba(244, 67, 54, 0.25)}@keyframes mdc-linear-progress-buffering{}.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-dots{background-color:rgba(244, 67, 54, 0.25);background-color:var(--mdc-linear-progress-track-color, rgba(244, 67, 54, 0.25))}@media(forced-colors: active){.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-dots{background-color:ButtonBorder}}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-dots{background-color:rgba(0,0,0,0);background-image:url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(244, 67, 54, 0.25)'/%3E%3C/svg%3E\")}}.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-bar{background-color:rgba(244, 67, 54, 0.25);background-color:var(--mdc-linear-progress-track-color, rgba(244, 67, 54, 0.25))}.mat-mdc-tooltip{--mdc-plain-tooltip-container-color:#616161;--mdc-plain-tooltip-supporting-text-color:#fff}.mat-mdc-tooltip{--mdc-plain-tooltip-supporting-text-font:Roboto, sans-serif;--mdc-plain-tooltip-supporting-text-size:12px;--mdc-plain-tooltip-supporting-text-weight:400;--mdc-plain-tooltip-supporting-text-tracking:0.0333333333em}html{--mdc-filled-text-field-caret-color:#3f51b5;--mdc-filled-text-field-focus-active-indicator-color:#3f51b5;--mdc-filled-text-field-focus-label-text-color:rgba(63, 81, 181, 0.87);--mdc-filled-text-field-container-color:whitesmoke;--mdc-filled-text-field-disabled-container-color:#fafafa;--mdc-filled-text-field-label-text-color:rgba(0, 0, 0, 0.6);--mdc-filled-text-field-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-filled-text-field-input-text-color:rgba(0, 0, 0, 0.87);--mdc-filled-text-field-disabled-input-text-color:rgba(0, 0, 0, 0.38);--mdc-filled-text-field-input-text-placeholder-color:rgba(0, 0, 0, 0.6);--mdc-filled-text-field-error-focus-label-text-color:#f44336;--mdc-filled-text-field-error-label-text-color:#f44336;--mdc-filled-text-field-error-caret-color:#f44336;--mdc-filled-text-field-active-indicator-color:rgba(0, 0, 0, 0.42);--mdc-filled-text-field-disabled-active-indicator-color:rgba(0, 0, 0, 0.06);--mdc-filled-text-field-hover-active-indicator-color:rgba(0, 0, 0, 0.87);--mdc-filled-text-field-error-active-indicator-color:#f44336;--mdc-filled-text-field-error-focus-active-indicator-color:#f44336;--mdc-filled-text-field-error-hover-active-indicator-color:#f44336;--mdc-outlined-text-field-caret-color:#3f51b5;--mdc-outlined-text-field-focus-outline-color:#3f51b5;--mdc-outlined-text-field-focus-label-text-color:rgba(63, 81, 181, 0.87);--mdc-outlined-text-field-label-text-color:rgba(0, 0, 0, 0.6);--mdc-outlined-text-field-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-outlined-text-field-input-text-color:rgba(0, 0, 0, 0.87);--mdc-outlined-text-field-disabled-input-text-color:rgba(0, 0, 0, 0.38);--mdc-outlined-text-field-input-text-placeholder-color:rgba(0, 0, 0, 0.6);--mdc-outlined-text-field-error-caret-color:#f44336;--mdc-outlined-text-field-error-focus-label-text-color:#f44336;--mdc-outlined-text-field-error-label-text-color:#f44336;--mdc-outlined-text-field-outline-color:rgba(0, 0, 0, 0.38);--mdc-outlined-text-field-disabled-outline-color:rgba(0, 0, 0, 0.06);--mdc-outlined-text-field-hover-outline-color:rgba(0, 0, 0, 0.87);--mdc-outlined-text-field-error-focus-outline-color:#f44336;--mdc-outlined-text-field-error-hover-outline-color:#f44336;--mdc-outlined-text-field-error-outline-color:#f44336;--mat-form-field-disabled-input-text-placeholder-color:rgba(0, 0, 0, 0.38)}.mat-mdc-form-field-error{color:var(--mdc-theme-error, #f44336)}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font);line-height:var(--mat-form-field-subscript-text-line-height);font-size:var(--mat-form-field-subscript-text-size);letter-spacing:var(--mat-form-field-subscript-text-tracking);font-weight:var(--mat-form-field-subscript-text-weight)}.mat-mdc-form-field-focus-overlay{background-color:rgba(0,0,0,.87)}.mat-mdc-form-field:hover .mat-mdc-form-field-focus-overlay{opacity:.04}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:.12}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{color:rgba(0,0,0,.54)}.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary .mat-mdc-form-field-infix::after{color:rgba(63,81,181,.87)}.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent .mat-mdc-form-field-infix::after{color:rgba(255,64,129,.87)}.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn .mat-mdc-form-field-infix::after{color:rgba(244,67,54,.87)}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:rgba(0,0,0,.38)}.mat-mdc-form-field.mat-accent{--mdc-filled-text-field-caret-color:#ff4081;--mdc-filled-text-field-focus-active-indicator-color:#ff4081;--mdc-filled-text-field-focus-label-text-color:rgba(255, 64, 129, 0.87);--mdc-outlined-text-field-caret-color:#ff4081;--mdc-outlined-text-field-focus-outline-color:#ff4081;--mdc-outlined-text-field-focus-label-text-color:rgba(255, 64, 129, 0.87)}.mat-mdc-form-field.mat-warn{--mdc-filled-text-field-caret-color:#f44336;--mdc-filled-text-field-focus-active-indicator-color:#f44336;--mdc-filled-text-field-focus-label-text-color:rgba(244, 67, 54, 0.87);--mdc-outlined-text-field-caret-color:#f44336;--mdc-outlined-text-field-focus-outline-color:#f44336;--mdc-outlined-text-field-focus-label-text-color:rgba(244, 67, 54, 0.87)}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:56px}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:28px}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY( -34.75px) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding-top:16px;padding-bottom:16px}.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix{padding-top:24px;padding-bottom:8px}.mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix{padding-top:16px;padding-bottom:16px}html{--mdc-filled-text-field-label-text-font:Roboto, sans-serif;--mdc-filled-text-field-label-text-size:16px;--mdc-filled-text-field-label-text-tracking:0.03125em;--mdc-filled-text-field-label-text-weight:400;--mdc-outlined-text-field-label-text-font:Roboto, sans-serif;--mdc-outlined-text-field-label-text-size:16px;--mdc-outlined-text-field-label-text-tracking:0.03125em;--mdc-outlined-text-field-label-text-weight:400;--mat-form-field-container-text-font:Roboto, sans-serif;--mat-form-field-container-text-line-height:24px;--mat-form-field-container-text-size:16px;--mat-form-field-container-text-tracking:0.03125em;--mat-form-field-container-text-weight:400;--mat-form-field-outlined-label-text-populated-size:16px;--mat-form-field-subscript-text-font:Roboto, sans-serif;--mat-form-field-subscript-text-line-height:20px;--mat-form-field-subscript-text-size:12px;--mat-form-field-subscript-text-tracking:0.0333333333em;--mat-form-field-subscript-text-weight:400}html{--mat-select-panel-background-color:white;--mat-select-enabled-trigger-text-color:rgba(0, 0, 0, 0.87);--mat-select-disabled-trigger-text-color:rgba(0, 0, 0, 0.38);--mat-select-placeholder-text-color:rgba(0, 0, 0, 0.6);--mat-select-enabled-arrow-color:rgba(0, 0, 0, 0.54);--mat-select-disabled-arrow-color:rgba(0, 0, 0, 0.38);--mat-select-focused-arrow-color:rgba(63, 81, 181, 0.87);--mat-select-invalid-arrow-color:rgba(244, 67, 54, 0.87)}html .mat-mdc-form-field.mat-accent{--mat-select-panel-background-color:white;--mat-select-enabled-trigger-text-color:rgba(0, 0, 0, 0.87);--mat-select-disabled-trigger-text-color:rgba(0, 0, 0, 0.38);--mat-select-placeholder-text-color:rgba(0, 0, 0, 0.6);--mat-select-enabled-arrow-color:rgba(0, 0, 0, 0.54);--mat-select-disabled-arrow-color:rgba(0, 0, 0, 0.38);--mat-select-focused-arrow-color:rgba(255, 64, 129, 0.87);--mat-select-invalid-arrow-color:rgba(244, 67, 54, 0.87)}html .mat-mdc-form-field.mat-warn{--mat-select-panel-background-color:white;--mat-select-enabled-trigger-text-color:rgba(0, 0, 0, 0.87);--mat-select-disabled-trigger-text-color:rgba(0, 0, 0, 0.38);--mat-select-placeholder-text-color:rgba(0, 0, 0, 0.6);--mat-select-enabled-arrow-color:rgba(0, 0, 0, 0.54);--mat-select-disabled-arrow-color:rgba(0, 0, 0, 0.38);--mat-select-focused-arrow-color:rgba(244, 67, 54, 0.87);--mat-select-invalid-arrow-color:rgba(244, 67, 54, 0.87)}html{--mat-select-trigger-text-font:Roboto, sans-serif;--mat-select-trigger-text-line-height:24px;--mat-select-trigger-text-size:16px;--mat-select-trigger-text-tracking:0.03125em;--mat-select-trigger-text-weight:400}html{--mat-autocomplete-background-color:white}.mat-mdc-dialog-container{--mdc-dialog-container-color:white;--mdc-dialog-subhead-color:rgba(0, 0, 0, 0.87);--mdc-dialog-supporting-text-color:rgba(0, 0, 0, 0.6)}.mat-mdc-dialog-container{--mdc-dialog-subhead-font:Roboto, sans-serif;--mdc-dialog-subhead-line-height:32px;--mdc-dialog-subhead-size:20px;--mdc-dialog-subhead-weight:500;--mdc-dialog-subhead-tracking:0.0125em;--mdc-dialog-supporting-text-font:Roboto, sans-serif;--mdc-dialog-supporting-text-line-height:24px;--mdc-dialog-supporting-text-size:16px;--mdc-dialog-supporting-text-weight:400;--mdc-dialog-supporting-text-tracking:0.03125em}.mat-mdc-standard-chip{--mdc-chip-disabled-label-text-color:#212121;--mdc-chip-elevated-container-color:#e0e0e0;--mdc-chip-elevated-disabled-container-color:#e0e0e0;--mdc-chip-focus-state-layer-color:black;--mdc-chip-focus-state-layer-opacity:0.12;--mdc-chip-label-text-color:#212121;--mdc-chip-with-icon-icon-color:#212121;--mdc-chip-with-icon-disabled-icon-color:#212121;--mdc-chip-with-icon-selected-icon-color:#212121;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color:#212121;--mdc-chip-with-trailing-icon-trailing-icon-color:#212121}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-primary,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-primary{--mdc-chip-disabled-label-text-color:white;--mdc-chip-elevated-container-color:#3f51b5;--mdc-chip-elevated-disabled-container-color:#3f51b5;--mdc-chip-focus-state-layer-color:black;--mdc-chip-focus-state-layer-opacity:0.12;--mdc-chip-label-text-color:white;--mdc-chip-with-icon-icon-color:white;--mdc-chip-with-icon-disabled-icon-color:white;--mdc-chip-with-icon-selected-icon-color:white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color:white;--mdc-chip-with-trailing-icon-trailing-icon-color:white}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-accent,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-accent{--mdc-chip-disabled-label-text-color:white;--mdc-chip-elevated-container-color:#ff4081;--mdc-chip-elevated-disabled-container-color:#ff4081;--mdc-chip-focus-state-layer-color:black;--mdc-chip-focus-state-layer-opacity:0.12;--mdc-chip-label-text-color:white;--mdc-chip-with-icon-icon-color:white;--mdc-chip-with-icon-disabled-icon-color:white;--mdc-chip-with-icon-selected-icon-color:white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color:white;--mdc-chip-with-trailing-icon-trailing-icon-color:white}.mat-mdc-standard-chip.mat-mdc-chip-selected.mat-warn,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mat-warn{--mdc-chip-disabled-label-text-color:white;--mdc-chip-elevated-container-color:#f44336;--mdc-chip-elevated-disabled-container-color:#f44336;--mdc-chip-focus-state-layer-color:black;--mdc-chip-focus-state-layer-opacity:0.12;--mdc-chip-label-text-color:white;--mdc-chip-with-icon-icon-color:white;--mdc-chip-with-icon-disabled-icon-color:white;--mdc-chip-with-icon-selected-icon-color:white;--mdc-chip-with-trailing-icon-disabled-trailing-icon-color:white;--mdc-chip-with-trailing-icon-trailing-icon-color:white}.mat-mdc-chip.mat-mdc-standard-chip{--mdc-chip-container-height:32px}.mat-mdc-standard-chip{--mdc-chip-label-text-font:Roboto, sans-serif;--mdc-chip-label-text-line-height:20px;--mdc-chip-label-text-size:14px;--mdc-chip-label-text-tracking:0.0178571429em;--mdc-chip-label-text-weight:400}.mat-mdc-slide-toggle{--mdc-switch-selected-focus-state-layer-color:#3949ab;--mdc-switch-selected-handle-color:#3949ab;--mdc-switch-selected-hover-state-layer-color:#3949ab;--mdc-switch-selected-pressed-state-layer-color:#3949ab;--mdc-switch-selected-focus-handle-color:#1a237e;--mdc-switch-selected-hover-handle-color:#1a237e;--mdc-switch-selected-pressed-handle-color:#1a237e;--mdc-switch-selected-focus-track-color:#7986cb;--mdc-switch-selected-hover-track-color:#7986cb;--mdc-switch-selected-pressed-track-color:#7986cb;--mdc-switch-selected-track-color:#7986cb;--mdc-switch-disabled-selected-handle-color:#424242;--mdc-switch-disabled-selected-icon-color:#fff;--mdc-switch-disabled-selected-track-color:#424242;--mdc-switch-disabled-unselected-handle-color:#424242;--mdc-switch-disabled-unselected-icon-color:#fff;--mdc-switch-disabled-unselected-track-color:#424242;--mdc-switch-handle-surface-color:var(--mdc-theme-surface, #fff);--mdc-switch-handle-elevation-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);--mdc-switch-handle-shadow-color:black;--mdc-switch-disabled-handle-elevation-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);--mdc-switch-selected-icon-color:#fff;--mdc-switch-unselected-focus-handle-color:#212121;--mdc-switch-unselected-focus-state-layer-color:#424242;--mdc-switch-unselected-focus-track-color:#e0e0e0;--mdc-switch-unselected-handle-color:#616161;--mdc-switch-unselected-hover-handle-color:#212121;--mdc-switch-unselected-hover-state-layer-color:#424242;--mdc-switch-unselected-hover-track-color:#e0e0e0;--mdc-switch-unselected-icon-color:#fff;--mdc-switch-unselected-pressed-handle-color:#212121;--mdc-switch-unselected-pressed-state-layer-color:#424242;--mdc-switch-unselected-pressed-track-color:#e0e0e0;--mdc-switch-unselected-track-color:#e0e0e0}.mat-mdc-slide-toggle .mdc-form-field{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:rgba(0,0,0,.38)}.mat-mdc-slide-toggle.mat-accent{--mdc-switch-selected-focus-state-layer-color:#d81b60;--mdc-switch-selected-handle-color:#d81b60;--mdc-switch-selected-hover-state-layer-color:#d81b60;--mdc-switch-selected-pressed-state-layer-color:#d81b60;--mdc-switch-selected-focus-handle-color:#880e4f;--mdc-switch-selected-hover-handle-color:#880e4f;--mdc-switch-selected-pressed-handle-color:#880e4f;--mdc-switch-selected-focus-track-color:#f06292;--mdc-switch-selected-hover-track-color:#f06292;--mdc-switch-selected-pressed-track-color:#f06292;--mdc-switch-selected-track-color:#f06292}.mat-mdc-slide-toggle.mat-warn{--mdc-switch-selected-focus-state-layer-color:#e53935;--mdc-switch-selected-handle-color:#e53935;--mdc-switch-selected-hover-state-layer-color:#e53935;--mdc-switch-selected-pressed-state-layer-color:#e53935;--mdc-switch-selected-focus-handle-color:#b71c1c;--mdc-switch-selected-hover-handle-color:#b71c1c;--mdc-switch-selected-pressed-handle-color:#b71c1c;--mdc-switch-selected-focus-track-color:#e57373;--mdc-switch-selected-hover-track-color:#e57373;--mdc-switch-selected-pressed-track-color:#e57373;--mdc-switch-selected-track-color:#e57373}.mat-mdc-slide-toggle{--mdc-switch-state-layer-size:48px}.mat-mdc-slide-toggle{--mat-slide-toggle-label-text-font:Roboto, sans-serif;--mat-slide-toggle-label-text-size:14px;--mat-slide-toggle-label-text-tracking:0.0178571429em;--mat-slide-toggle-label-text-line-height:20px;--mat-slide-toggle-label-text-weight:400}.mat-mdc-slide-toggle .mdc-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-body2-font-size, 0.875rem);line-height:1.25rem;line-height:var(--mdc-typography-body2-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:0.0178571429em;letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:inherit;text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body2-text-transform, inherit)}.mat-mdc-radio-button .mdc-form-field{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mat-mdc-radio-button.mat-primary{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#3f51b5;--mdc-radio-selected-hover-icon-color:#3f51b5;--mdc-radio-selected-icon-color:#3f51b5;--mdc-radio-selected-pressed-icon-color:#3f51b5;--mat-radio-ripple-color:#000;--mat-radio-checked-ripple-color:#3f51b5;--mat-radio-disabled-label-color:rgba(0, 0, 0, 0.38)}.mat-mdc-radio-button.mat-accent{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#ff4081;--mdc-radio-selected-hover-icon-color:#ff4081;--mdc-radio-selected-icon-color:#ff4081;--mdc-radio-selected-pressed-icon-color:#ff4081;--mat-radio-ripple-color:#000;--mat-radio-checked-ripple-color:#ff4081;--mat-radio-disabled-label-color:rgba(0, 0, 0, 0.38)}.mat-mdc-radio-button.mat-warn{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#f44336;--mdc-radio-selected-hover-icon-color:#f44336;--mdc-radio-selected-icon-color:#f44336;--mdc-radio-selected-pressed-icon-color:#f44336;--mat-radio-ripple-color:#000;--mat-radio-checked-ripple-color:#f44336;--mat-radio-disabled-label-color:rgba(0, 0, 0, 0.38)}.mat-mdc-radio-button .mdc-radio{--mdc-radio-state-layer-size:40px}.mat-mdc-radio-button .mdc-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body2-font-size, 14px);line-height:var(--mdc-typography-body2-line-height, 20px);font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:var(--mdc-typography-body2-text-transform, none)}.mat-mdc-slider{--mdc-slider-label-container-color:black;--mdc-slider-label-label-text-color:white;--mdc-slider-disabled-handle-color:#000;--mdc-slider-disabled-active-track-color:#000;--mdc-slider-disabled-inactive-track-color:#000;--mdc-slider-with-tick-marks-disabled-container-color:#000;--mat-mdc-slider-value-indicator-opacity: 0.6}.mat-mdc-slider.mat-primary{--mdc-slider-handle-color:#3f51b5;--mdc-slider-focus-handle-color:#3f51b5;--mdc-slider-hover-handle-color:#3f51b5;--mdc-slider-active-track-color:#3f51b5;--mdc-slider-inactive-track-color:#3f51b5;--mdc-slider-with-tick-marks-active-container-color:#fff;--mdc-slider-with-tick-marks-inactive-container-color:#3f51b5;--mat-mdc-slider-ripple-color: #3f51b5;--mat-mdc-slider-hover-ripple-color: rgba(63, 81, 181, 0.05);--mat-mdc-slider-focus-ripple-color: rgba(63, 81, 181, 0.2)}.mat-mdc-slider.mat-accent{--mdc-slider-handle-color:#ff4081;--mdc-slider-focus-handle-color:#ff4081;--mdc-slider-hover-handle-color:#ff4081;--mdc-slider-active-track-color:#ff4081;--mdc-slider-inactive-track-color:#ff4081;--mdc-slider-with-tick-marks-active-container-color:#fff;--mdc-slider-with-tick-marks-inactive-container-color:#ff4081;--mat-mdc-slider-ripple-color: #ff4081;--mat-mdc-slider-hover-ripple-color: rgba(255, 64, 129, 0.05);--mat-mdc-slider-focus-ripple-color: rgba(255, 64, 129, 0.2)}.mat-mdc-slider.mat-warn{--mdc-slider-handle-color:#f44336;--mdc-slider-focus-handle-color:#f44336;--mdc-slider-hover-handle-color:#f44336;--mdc-slider-active-track-color:#f44336;--mdc-slider-inactive-track-color:#f44336;--mdc-slider-with-tick-marks-active-container-color:#fff;--mdc-slider-with-tick-marks-inactive-container-color:#f44336;--mat-mdc-slider-ripple-color: #f44336;--mat-mdc-slider-hover-ripple-color: rgba(244, 67, 54, 0.05);--mat-mdc-slider-focus-ripple-color: rgba(244, 67, 54, 0.2)}.mat-mdc-slider{--mdc-slider-label-label-text-font:Roboto, sans-serif;--mdc-slider-label-label-text-size:14px;--mdc-slider-label-label-text-line-height:22px;--mdc-slider-label-label-text-tracking:0.0071428571em;--mdc-slider-label-label-text-weight:500}html{--mat-menu-item-label-text-color:rgba(0, 0, 0, 0.87);--mat-menu-item-icon-color:rgba(0, 0, 0, 0.87);--mat-menu-item-hover-state-layer-color:rgba(0, 0, 0, 0.04);--mat-menu-item-focus-state-layer-color:rgba(0, 0, 0, 0.04);--mat-menu-container-color:white}html{--mat-menu-item-label-text-font:Roboto, sans-serif;--mat-menu-item-label-text-size:16px;--mat-menu-item-label-text-tracking:0.03125em;--mat-menu-item-label-text-line-height:24px;--mat-menu-item-label-text-weight:400}.mat-mdc-list-base{--mdc-list-list-item-label-text-color:rgba(0, 0, 0, 0.87);--mdc-list-list-item-supporting-text-color:rgba(0, 0, 0, 0.54);--mdc-list-list-item-leading-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-trailing-supporting-text-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-trailing-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-selected-trailing-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-disabled-label-text-color:black;--mdc-list-list-item-disabled-leading-icon-color:black;--mdc-list-list-item-disabled-trailing-icon-color:black;--mdc-list-list-item-hover-label-text-color:rgba(0, 0, 0, 0.87);--mdc-list-list-item-hover-leading-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-hover-trailing-icon-color:rgba(0, 0, 0, 0.38);--mdc-list-list-item-focus-label-text-color:rgba(0, 0, 0, 0.87);--mdc-list-list-item-hover-state-layer-color:black;--mdc-list-list-item-hover-state-layer-opacity:0.04;--mdc-list-list-item-focus-state-layer-color:black;--mdc-list-list-item-focus-state-layer-opacity:0.12}.mdc-list-item__start,.mdc-list-item__end{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#3f51b5;--mdc-radio-selected-hover-icon-color:#3f51b5;--mdc-radio-selected-icon-color:#3f51b5;--mdc-radio-selected-pressed-icon-color:#3f51b5}.mat-accent .mdc-list-item__start,.mat-accent .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#ff4081;--mdc-radio-selected-hover-icon-color:#ff4081;--mdc-radio-selected-icon-color:#ff4081;--mdc-radio-selected-pressed-icon-color:#ff4081}.mat-warn .mdc-list-item__start,.mat-warn .mdc-list-item__end{--mdc-radio-disabled-selected-icon-color:#000;--mdc-radio-disabled-unselected-icon-color:#000;--mdc-radio-unselected-hover-icon-color:#212121;--mdc-radio-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-radio-selected-focus-icon-color:#f44336;--mdc-radio-selected-hover-icon-color:#f44336;--mdc-radio-selected-icon-color:#f44336;--mdc-radio-selected-pressed-icon-color:#f44336}.mat-mdc-list-option{--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#3f51b5;--mdc-checkbox-selected-hover-icon-color:#3f51b5;--mdc-checkbox-selected-icon-color:#3f51b5;--mdc-checkbox-selected-pressed-icon-color:#3f51b5;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-selected-focus-state-layer-color:#3f51b5;--mdc-checkbox-selected-hover-state-layer-color:#3f51b5;--mdc-checkbox-selected-pressed-state-layer-color:#3f51b5;--mdc-checkbox-unselected-focus-state-layer-color:black;--mdc-checkbox-unselected-hover-state-layer-color:black;--mdc-checkbox-unselected-pressed-state-layer-color:black}.mat-mdc-list-option.mat-accent{--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#ff4081;--mdc-checkbox-selected-hover-icon-color:#ff4081;--mdc-checkbox-selected-icon-color:#ff4081;--mdc-checkbox-selected-pressed-icon-color:#ff4081;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-selected-focus-state-layer-color:#ff4081;--mdc-checkbox-selected-hover-state-layer-color:#ff4081;--mdc-checkbox-selected-pressed-state-layer-color:#ff4081;--mdc-checkbox-unselected-focus-state-layer-color:black;--mdc-checkbox-unselected-hover-state-layer-color:black;--mdc-checkbox-unselected-pressed-state-layer-color:black}.mat-mdc-list-option.mat-warn{--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#f44336;--mdc-checkbox-selected-hover-icon-color:#f44336;--mdc-checkbox-selected-icon-color:#f44336;--mdc-checkbox-selected-pressed-icon-color:#f44336;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-selected-focus-state-layer-color:#f44336;--mdc-checkbox-selected-hover-state-layer-color:#f44336;--mdc-checkbox-selected-pressed-state-layer-color:#f44336;--mdc-checkbox-unselected-focus-state-layer-color:black;--mdc-checkbox-unselected-hover-state-layer-color:black;--mdc-checkbox-unselected-pressed-state-layer-color:black}.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected .mdc-list-item__primary-text,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated .mdc-list-item__primary-text{color:#3f51b5}.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start{color:#3f51b5}.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__start,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__content,.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__end{opacity:1}.mat-mdc-list-base{--mdc-list-list-item-one-line-container-height:48px;--mdc-list-list-item-two-line-container-height:64px;--mdc-list-list-item-three-line-container-height:88px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line{height:56px}.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines,.mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines{height:72px}.mat-mdc-list-base{--mdc-list-list-item-label-text-font:Roboto, sans-serif;--mdc-list-list-item-label-text-line-height:24px;--mdc-list-list-item-label-text-size:16px;--mdc-list-list-item-label-text-tracking:0.03125em;--mdc-list-list-item-label-text-weight:400;--mdc-list-list-item-supporting-text-font:Roboto, sans-serif;--mdc-list-list-item-supporting-text-line-height:20px;--mdc-list-list-item-supporting-text-size:14px;--mdc-list-list-item-supporting-text-tracking:0.0178571429em;--mdc-list-list-item-supporting-text-weight:400;--mdc-list-list-item-trailing-supporting-text-font:Roboto, sans-serif;--mdc-list-list-item-trailing-supporting-text-line-height:20px;--mdc-list-list-item-trailing-supporting-text-size:12px;--mdc-list-list-item-trailing-supporting-text-tracking:0.0333333333em;--mdc-list-list-item-trailing-supporting-text-weight:400}.mdc-list-group__subheader{font-size:16px;font-weight:400;line-height:28px;font-family:Roboto, sans-serif;letter-spacing:.009375em}html{--mat-paginator-container-text-color:rgba(0, 0, 0, 0.87);--mat-paginator-container-background-color:white;--mat-paginator-enabled-icon-color:rgba(0, 0, 0, 0.54);--mat-paginator-disabled-icon-color:rgba(0, 0, 0, 0.12)}html{--mat-paginator-container-size:56px}.mat-mdc-paginator .mat-mdc-form-field-infix{min-height:40px}.mat-mdc-paginator .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:20px}.mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY( -26.75px) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}.mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix{padding-top:8px;padding-bottom:8px}.mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix{padding-top:8px;padding-bottom:8px}.mat-mdc-paginator .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix{padding-top:8px;padding-bottom:8px}.mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label{display:none}html{--mat-paginator-container-text-font:Roboto, sans-serif;--mat-paginator-container-text-line-height:20px;--mat-paginator-container-text-size:12px;--mat-paginator-container-text-tracking:0.0333333333em;--mat-paginator-container-text-weight:400;--mat-paginator-select-trigger-text-size:12px}.mat-mdc-tab-group,.mat-mdc-tab-nav-bar{--mdc-tab-indicator-active-indicator-color:#3f51b5;--mat-tab-header-disabled-ripple-color:rgba(0, 0, 0, 0.38);--mat-tab-header-pagination-icon-color:#000;--mat-tab-header-inactive-label-text-color:rgba(0, 0, 0, 0.6);--mat-tab-header-active-label-text-color:#3f51b5;--mat-tab-header-active-ripple-color:#3f51b5;--mat-tab-header-inactive-ripple-color:#3f51b5;--mat-tab-header-inactive-focus-label-text-color:rgba(0, 0, 0, 0.6);--mat-tab-header-inactive-hover-label-text-color:rgba(0, 0, 0, 0.6);--mat-tab-header-active-focus-label-text-color:#3f51b5;--mat-tab-header-active-hover-label-text-color:#3f51b5;--mat-tab-header-active-focus-indicator-color:#3f51b5;--mat-tab-header-active-hover-indicator-color:#3f51b5}.mat-mdc-tab-group.mat-accent,.mat-mdc-tab-nav-bar.mat-accent{--mdc-tab-indicator-active-indicator-color:#ff4081;--mat-tab-header-disabled-ripple-color:rgba(0, 0, 0, 0.38);--mat-tab-header-pagination-icon-color:#000;--mat-tab-header-inactive-label-text-color:rgba(0, 0, 0, 0.6);--mat-tab-header-active-label-text-color:#ff4081;--mat-tab-header-active-ripple-color:#ff4081;--mat-tab-header-inactive-ripple-color:#ff4081;--mat-tab-header-inactive-focus-label-text-color:rgba(0, 0, 0, 0.6);--mat-tab-header-inactive-hover-label-text-color:rgba(0, 0, 0, 0.6);--mat-tab-header-active-focus-label-text-color:#ff4081;--mat-tab-header-active-hover-label-text-color:#ff4081;--mat-tab-header-active-focus-indicator-color:#ff4081;--mat-tab-header-active-hover-indicator-color:#ff4081}.mat-mdc-tab-group.mat-warn,.mat-mdc-tab-nav-bar.mat-warn{--mdc-tab-indicator-active-indicator-color:#f44336;--mat-tab-header-disabled-ripple-color:rgba(0, 0, 0, 0.38);--mat-tab-header-pagination-icon-color:#000;--mat-tab-header-inactive-label-text-color:rgba(0, 0, 0, 0.6);--mat-tab-header-active-label-text-color:#f44336;--mat-tab-header-active-ripple-color:#f44336;--mat-tab-header-inactive-ripple-color:#f44336;--mat-tab-header-inactive-focus-label-text-color:rgba(0, 0, 0, 0.6);--mat-tab-header-inactive-hover-label-text-color:rgba(0, 0, 0, 0.6);--mat-tab-header-active-focus-label-text-color:#f44336;--mat-tab-header-active-hover-label-text-color:#f44336;--mat-tab-header-active-focus-indicator-color:#f44336;--mat-tab-header-active-hover-indicator-color:#f44336}.mat-mdc-tab-group.mat-background-primary,.mat-mdc-tab-nav-bar.mat-background-primary{--mat-tab-header-with-background-background-color:#3f51b5;--mat-tab-header-with-background-foreground-color:white}.mat-mdc-tab-group.mat-background-accent,.mat-mdc-tab-nav-bar.mat-background-accent{--mat-tab-header-with-background-background-color:#ff4081;--mat-tab-header-with-background-foreground-color:white}.mat-mdc-tab-group.mat-background-warn,.mat-mdc-tab-nav-bar.mat-background-warn{--mat-tab-header-with-background-background-color:#f44336;--mat-tab-header-with-background-foreground-color:white}.mat-mdc-tab-header{--mdc-secondary-navigation-tab-container-height:48px}.mat-mdc-tab-header{--mat-tab-header-label-text-font:Roboto, sans-serif;--mat-tab-header-label-text-size:14px;--mat-tab-header-label-text-tracking:0.0892857143em;--mat-tab-header-label-text-line-height:36px;--mat-tab-header-label-text-weight:500}html{--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#ff4081;--mdc-checkbox-selected-hover-icon-color:#ff4081;--mdc-checkbox-selected-icon-color:#ff4081;--mdc-checkbox-selected-pressed-icon-color:#ff4081;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-selected-focus-state-layer-color:#ff4081;--mdc-checkbox-selected-hover-state-layer-color:#ff4081;--mdc-checkbox-selected-pressed-state-layer-color:#ff4081;--mdc-checkbox-unselected-focus-state-layer-color:black;--mdc-checkbox-unselected-hover-state-layer-color:black;--mdc-checkbox-unselected-pressed-state-layer-color:black}.mat-mdc-checkbox.mat-primary{--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#3f51b5;--mdc-checkbox-selected-hover-icon-color:#3f51b5;--mdc-checkbox-selected-icon-color:#3f51b5;--mdc-checkbox-selected-pressed-icon-color:#3f51b5;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-selected-focus-state-layer-color:#3f51b5;--mdc-checkbox-selected-hover-state-layer-color:#3f51b5;--mdc-checkbox-selected-pressed-state-layer-color:#3f51b5;--mdc-checkbox-unselected-focus-state-layer-color:black;--mdc-checkbox-unselected-hover-state-layer-color:black;--mdc-checkbox-unselected-pressed-state-layer-color:black}.mat-mdc-checkbox.mat-warn{--mdc-checkbox-disabled-selected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-disabled-unselected-icon-color:rgba(0, 0, 0, 0.38);--mdc-checkbox-selected-checkmark-color:#fff;--mdc-checkbox-selected-focus-icon-color:#f44336;--mdc-checkbox-selected-hover-icon-color:#f44336;--mdc-checkbox-selected-icon-color:#f44336;--mdc-checkbox-selected-pressed-icon-color:#f44336;--mdc-checkbox-unselected-focus-icon-color:#212121;--mdc-checkbox-unselected-hover-icon-color:#212121;--mdc-checkbox-unselected-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-unselected-pressed-icon-color:rgba(0, 0, 0, 0.54);--mdc-checkbox-selected-focus-state-layer-color:#f44336;--mdc-checkbox-selected-hover-state-layer-color:#f44336;--mdc-checkbox-selected-pressed-state-layer-color:#f44336;--mdc-checkbox-unselected-focus-state-layer-color:black;--mdc-checkbox-unselected-hover-state-layer-color:black;--mdc-checkbox-unselected-pressed-state-layer-color:black}.mat-mdc-checkbox .mdc-form-field{color:var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{color:rgba(0,0,0,.38)}html{--mdc-checkbox-state-layer-size:40px}.mat-mdc-checkbox .mdc-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-body2-font-size, 14px);line-height:var(--mdc-typography-body2-line-height, 20px);font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:var(--mdc-typography-body2-text-transform, none)}.mat-mdc-button.mat-unthemed{--mdc-text-button-label-text-color:#000}.mat-mdc-button.mat-primary{--mdc-text-button-label-text-color:#3f51b5}.mat-mdc-button.mat-accent{--mdc-text-button-label-text-color:#ff4081}.mat-mdc-button.mat-warn{--mdc-text-button-label-text-color:#f44336}.mat-mdc-button[disabled][disabled]{--mdc-text-button-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-text-button-label-text-color:rgba(0, 0, 0, 0.38)}.mat-mdc-unelevated-button.mat-unthemed{--mdc-filled-button-container-color:#fff;--mdc-filled-button-label-text-color:#000}.mat-mdc-unelevated-button.mat-primary{--mdc-filled-button-container-color:#3f51b5;--mdc-filled-button-label-text-color:#fff}.mat-mdc-unelevated-button.mat-accent{--mdc-filled-button-container-color:#ff4081;--mdc-filled-button-label-text-color:#fff}.mat-mdc-unelevated-button.mat-warn{--mdc-filled-button-container-color:#f44336;--mdc-filled-button-label-text-color:#fff}.mat-mdc-unelevated-button[disabled][disabled]{--mdc-filled-button-disabled-container-color:rgba(0, 0, 0, 0.12);--mdc-filled-button-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-filled-button-container-color:rgba(0, 0, 0, 0.12);--mdc-filled-button-label-text-color:rgba(0, 0, 0, 0.38)}.mat-mdc-raised-button.mat-unthemed{--mdc-protected-button-container-color:#fff;--mdc-protected-button-label-text-color:#000}.mat-mdc-raised-button.mat-primary{--mdc-protected-button-container-color:#3f51b5;--mdc-protected-button-label-text-color:#fff}.mat-mdc-raised-button.mat-accent{--mdc-protected-button-container-color:#ff4081;--mdc-protected-button-label-text-color:#fff}.mat-mdc-raised-button.mat-warn{--mdc-protected-button-container-color:#f44336;--mdc-protected-button-label-text-color:#fff}.mat-mdc-raised-button[disabled][disabled]{--mdc-protected-button-disabled-container-color:rgba(0, 0, 0, 0.12);--mdc-protected-button-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-protected-button-container-color:rgba(0, 0, 0, 0.12);--mdc-protected-button-label-text-color:rgba(0, 0, 0, 0.38);--mdc-protected-button-container-elevation:0}.mat-mdc-outlined-button{--mdc-outlined-button-outline-color:rgba(0, 0, 0, 0.12)}.mat-mdc-outlined-button.mat-unthemed{--mdc-outlined-button-label-text-color:#000}.mat-mdc-outlined-button.mat-primary{--mdc-outlined-button-label-text-color:#3f51b5}.mat-mdc-outlined-button.mat-accent{--mdc-outlined-button-label-text-color:#ff4081}.mat-mdc-outlined-button.mat-warn{--mdc-outlined-button-label-text-color:#f44336}.mat-mdc-outlined-button[disabled][disabled]{--mdc-outlined-button-label-text-color:rgba(0, 0, 0, 0.38);--mdc-outlined-button-disabled-label-text-color:rgba(0, 0, 0, 0.38);--mdc-outlined-button-outline-color:rgba(0, 0, 0, 0.12);--mdc-outlined-button-disabled-outline-color:rgba(0, 0, 0, 0.12)}.mat-mdc-button,.mat-mdc-outlined-button{--mat-mdc-button-persistent-ripple-color: #000;--mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1)}.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before{opacity:.04}.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before,.mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-button.mat-primary,.mat-mdc-outlined-button.mat-primary{--mat-mdc-button-persistent-ripple-color: #3f51b5;--mat-mdc-button-ripple-color: rgba(63, 81, 181, 0.1)}.mat-mdc-button.mat-accent,.mat-mdc-outlined-button.mat-accent{--mat-mdc-button-persistent-ripple-color: #ff4081;--mat-mdc-button-ripple-color: rgba(255, 64, 129, 0.1)}.mat-mdc-button.mat-warn,.mat-mdc-outlined-button.mat-warn{--mat-mdc-button-persistent-ripple-color: #f44336;--mat-mdc-button-ripple-color: rgba(244, 67, 54, 0.1)}.mat-mdc-raised-button,.mat-mdc-unelevated-button{--mat-mdc-button-persistent-ripple-color: #000;--mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1)}.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before{opacity:.04}.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before,.mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-raised-button.mat-primary,.mat-mdc-unelevated-button.mat-primary{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-raised-button.mat-accent,.mat-mdc-unelevated-button.mat-accent{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-raised-button.mat-warn,.mat-mdc-unelevated-button.mat-warn{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-button.mat-mdc-button-base,.mat-mdc-raised-button.mat-mdc-button-base,.mat-mdc-unelevated-button.mat-mdc-button-base,.mat-mdc-outlined-button.mat-mdc-button-base{height:36px}.mdc-button{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-button-font-size, 14px);line-height:var(--mdc-typography-button-line-height, 36px);font-weight:var(--mdc-typography-button-font-weight, 500);letter-spacing:var(--mdc-typography-button-letter-spacing, 0.0892857143em);text-decoration:var(--mdc-typography-button-text-decoration, none);text-transform:var(--mdc-typography-button-text-transform, none)}.mat-mdc-icon-button{--mat-mdc-button-persistent-ripple-color: #000;--mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);--mdc-icon-button-icon-color:inherit;--mat-mdc-button-persistent-ripple-color: #000;--mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1)}.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before{opacity:.04}.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-icon-button.mat-primary{--mat-mdc-button-persistent-ripple-color: #6200ee;--mat-mdc-button-ripple-color: rgba(98, 0, 238, 0.1)}.mat-mdc-icon-button.mat-accent{--mat-mdc-button-persistent-ripple-color: #018786;--mat-mdc-button-ripple-color: rgba(1, 135, 134, 0.1)}.mat-mdc-icon-button.mat-warn{--mat-mdc-button-persistent-ripple-color: #b00020;--mat-mdc-button-ripple-color: rgba(176, 0, 32, 0.1)}.mat-mdc-icon-button.mat-primary{--mdc-icon-button-icon-color:#3f51b5;--mat-mdc-button-persistent-ripple-color: #3f51b5;--mat-mdc-button-ripple-color: rgba(63, 81, 181, 0.1)}.mat-mdc-icon-button.mat-accent{--mdc-icon-button-icon-color:#ff4081;--mat-mdc-button-persistent-ripple-color: #ff4081;--mat-mdc-button-ripple-color: rgba(255, 64, 129, 0.1)}.mat-mdc-icon-button.mat-warn{--mdc-icon-button-icon-color:#f44336;--mat-mdc-button-persistent-ripple-color: #f44336;--mat-mdc-button-ripple-color: rgba(244, 67, 54, 0.1)}.mat-mdc-icon-button[disabled][disabled]{--mdc-icon-button-icon-color:rgba(0, 0, 0, 0.38);--mdc-icon-button-disabled-icon-color:rgba(0, 0, 0, 0.38)}.mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size:48px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:12px}.mat-mdc-fab,.mat-mdc-mini-fab{--mat-mdc-button-persistent-ripple-color: #000;--mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1)}.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before{opacity:.04}.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before,.mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before{opacity:.12}.mat-mdc-fab.mat-primary,.mat-mdc-mini-fab.mat-primary{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-fab.mat-accent,.mat-mdc-mini-fab.mat-accent{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-fab.mat-warn,.mat-mdc-mini-fab.mat-warn{--mat-mdc-button-persistent-ripple-color: #fff;--mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1)}.mat-mdc-fab[disabled][disabled],.mat-mdc-mini-fab[disabled][disabled]{--mdc-fab-container-color:rgba(0, 0, 0, 0.12);--mdc-fab-icon-color:rgba(0, 0, 0, 0.38);--mat-mdc-fab-color: rgba(0, 0, 0, 0.38)}.mat-mdc-fab.mat-unthemed,.mat-mdc-mini-fab.mat-unthemed{--mdc-fab-container-color:white;--mdc-fab-icon-color:black;--mat-mdc-fab-color: #000}.mat-mdc-fab.mat-primary,.mat-mdc-mini-fab.mat-primary{--mdc-fab-container-color:#3f51b5;--mdc-fab-icon-color:white;--mat-mdc-fab-color: #fff}.mat-mdc-fab.mat-accent,.mat-mdc-mini-fab.mat-accent{--mdc-fab-container-color:#ff4081;--mdc-fab-icon-color:white;--mat-mdc-fab-color: #fff}.mat-mdc-fab.mat-warn,.mat-mdc-mini-fab.mat-warn{--mdc-fab-container-color:#f44336;--mdc-fab-icon-color:white;--mat-mdc-fab-color: #fff}.mdc-fab--extended{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:var(--mdc-typography-button-font-size, 14px);line-height:var(--mdc-typography-button-line-height, 36px);font-weight:var(--mdc-typography-button-font-weight, 500);letter-spacing:var(--mdc-typography-button-letter-spacing, 0.0892857143em);text-decoration:var(--mdc-typography-button-text-decoration, none);text-transform:var(--mdc-typography-button-text-transform, none)}.mat-mdc-extended-fab{--mdc-extended-fab-label-text-font:Roboto, sans-serif;--mdc-extended-fab-label-text-size:14px;--mdc-extended-fab-label-text-tracking:0.0892857143em;--mdc-extended-fab-label-text-weight:500}.mat-mdc-snack-bar-container{--mdc-snackbar-container-color:#333333;--mdc-snackbar-supporting-text-color:rgba(255, 255, 255, 0.87);--mat-snack-bar-button-color:#ff4081}.mat-mdc-snack-bar-container{--mdc-snackbar-supporting-text-font:Roboto, sans-serif;--mdc-snackbar-supporting-text-line-height:20px;--mdc-snackbar-supporting-text-size:14px;--mdc-snackbar-supporting-text-weight:400}html{--mat-table-background-color:white;--mat-table-header-headline-color:rgba(0, 0, 0, 0.87);--mat-table-row-item-label-text-color:rgba(0, 0, 0, 0.87);--mat-table-row-item-outline-color:rgba(0, 0, 0, 0.12)}html{--mat-table-header-container-height:56px;--mat-table-footer-container-height:52px;--mat-table-row-item-container-height:52px}html{--mat-table-header-headline-font:Roboto, sans-serif;--mat-table-header-headline-line-height:22px;--mat-table-header-headline-size:14px;--mat-table-header-headline-weight:500;--mat-table-header-headline-tracking:0.0071428571em;--mat-table-row-item-label-text-font:Roboto, sans-serif;--mat-table-row-item-label-text-line-height:20px;--mat-table-row-item-label-text-size:14px;--mat-table-row-item-label-text-weight:400;--mat-table-row-item-label-text-tracking:0.0178571429em;--mat-table-footer-supporting-text-font:Roboto, sans-serif;--mat-table-footer-supporting-text-line-height:20px;--mat-table-footer-supporting-text-size:14px;--mat-table-footer-supporting-text-weight:400;--mat-table-footer-supporting-text-tracking:0.0178571429em}.mat-mdc-progress-spinner{--mdc-circular-progress-active-indicator-color:#3f51b5}.mat-mdc-progress-spinner.mat-accent{--mdc-circular-progress-active-indicator-color:#ff4081}.mat-mdc-progress-spinner.mat-warn{--mdc-circular-progress-active-indicator-color:#f44336}.mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none;background-color:var(--mat-badge-background-color);color:var(--mat-badge-text-color);font-family:Roboto, sans-serif;font-family:var(--mat-badge-text-font, Roboto, sans-serif);font-size:12px;font-size:var(--mat-badge-text-size, 12px);font-weight:600;font-weight:var(--mat-badge-text-weight, 600)}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color)}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px;font-size:9px;font-size:var(--mat-badge-small-size-text-size, 9px)}.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px;font-size:24px;font-size:var(--mat-badge-large-size-text-size, 24px)}.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}html{--mat-badge-background-color:#3f51b5;--mat-badge-text-color:white;--mat-badge-disabled-state-background-color:#b9b9b9;--mat-badge-disabled-state-text-color:rgba(0, 0, 0, 0.38)}.mat-badge-accent{--mat-badge-background-color:#ff4081;--mat-badge-text-color:white}.mat-badge-warn{--mat-badge-background-color:#f44336;--mat-badge-text-color:white}html{--mat-badge-text-font:Roboto, sans-serif;--mat-badge-text-size:12px;--mat-badge-text-weight:600;--mat-badge-small-size-text-size:9px;--mat-badge-large-size-text-size:24px}html{--mat-bottom-sheet-container-text-color:rgba(0, 0, 0, 0.87);--mat-bottom-sheet-container-background-color:white}html{--mat-bottom-sheet-container-text-font:Roboto, sans-serif;--mat-bottom-sheet-container-text-line-height:20px;--mat-bottom-sheet-container-text-size:14px;--mat-bottom-sheet-container-text-tracking:0.0178571429em;--mat-bottom-sheet-container-text-weight:400}html{--mat-legacy-button-toggle-text-color:rgba(0, 0, 0, 0.38);--mat-legacy-button-toggle-state-layer-color:rgba(0, 0, 0, 0.12);--mat-legacy-button-toggle-selected-state-text-color:rgba(0, 0, 0, 0.54);--mat-legacy-button-toggle-selected-state-background-color:#e0e0e0;--mat-legacy-button-toggle-disabled-state-text-color:rgba(0, 0, 0, 0.26);--mat-legacy-button-toggle-disabled-state-background-color:#eeeeee;--mat-legacy-button-toggle-disabled-selected-state-background-color:#bdbdbd;--mat-standard-button-toggle-text-color:rgba(0, 0, 0, 0.87);--mat-standard-button-toggle-background-color:white;--mat-standard-button-toggle-state-layer-color:black;--mat-standard-button-toggle-selected-state-background-color:#e0e0e0;--mat-standard-button-toggle-selected-state-text-color:rgba(0, 0, 0, 0.87);--mat-standard-button-toggle-disabled-state-text-color:rgba(0, 0, 0, 0.26);--mat-standard-button-toggle-disabled-state-background-color:white;--mat-standard-button-toggle-disabled-selected-state-text-color:rgba(0, 0, 0, 0.87);--mat-standard-button-toggle-disabled-selected-state-background-color:#bdbdbd;--mat-standard-button-toggle-divider-color:#e0e0e0}html{--mat-standard-button-toggle-height:48px}html{--mat-legacy-button-toggle-text-font:Roboto, sans-serif;--mat-standard-button-toggle-text-font:Roboto, sans-serif}html{--mat-datepicker-calendar-date-selected-state-text-color:white;--mat-datepicker-calendar-date-selected-state-background-color:#3f51b5;--mat-datepicker-calendar-date-selected-disabled-state-background-color:rgba(63, 81, 181, 0.4);--mat-datepicker-calendar-date-today-selected-state-outline-color:white;--mat-datepicker-calendar-date-focus-state-background-color:rgba(63, 81, 181, 0.3);--mat-datepicker-calendar-date-hover-state-background-color:rgba(63, 81, 181, 0.3);--mat-datepicker-toggle-active-state-icon-color:#3f51b5;--mat-datepicker-calendar-date-in-range-state-background-color:rgba(63, 81, 181, 0.2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color:rgba(249, 171, 0, 0.2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color:#a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color:#46a35e;--mat-datepicker-toggle-icon-color:rgba(0, 0, 0, 0.54);--mat-datepicker-calendar-body-label-text-color:rgba(0, 0, 0, 0.54);--mat-datepicker-calendar-period-button-icon-color:rgba(0, 0, 0, 0.54);--mat-datepicker-calendar-navigation-button-icon-color:rgba(0, 0, 0, 0.54);--mat-datepicker-calendar-header-divider-color:rgba(0, 0, 0, 0.12);--mat-datepicker-calendar-header-text-color:rgba(0, 0, 0, 0.54);--mat-datepicker-calendar-date-today-outline-color:rgba(0, 0, 0, 0.38);--mat-datepicker-calendar-date-today-disabled-state-outline-color:rgba(0, 0, 0, 0.18);--mat-datepicker-calendar-date-text-color:rgba(0, 0, 0, 0.87);--mat-datepicker-calendar-date-outline-color:transparent;--mat-datepicker-calendar-date-disabled-state-text-color:rgba(0, 0, 0, 0.38);--mat-datepicker-calendar-date-preview-state-outline-color:rgba(0, 0, 0, 0.24);--mat-datepicker-range-input-separator-color:rgba(0, 0, 0, 0.87);--mat-datepicker-range-input-disabled-state-separator-color:rgba(0, 0, 0, 0.38);--mat-datepicker-range-input-disabled-state-text-color:rgba(0, 0, 0, 0.38);--mat-datepicker-calendar-container-background-color:white;--mat-datepicker-calendar-container-text-color:rgba(0, 0, 0, 0.87)}.mat-datepicker-content.mat-accent{--mat-datepicker-calendar-date-selected-state-text-color:white;--mat-datepicker-calendar-date-selected-state-background-color:#ff4081;--mat-datepicker-calendar-date-selected-disabled-state-background-color:rgba(255, 64, 129, 0.4);--mat-datepicker-calendar-date-today-selected-state-outline-color:white;--mat-datepicker-calendar-date-focus-state-background-color:rgba(255, 64, 129, 0.3);--mat-datepicker-calendar-date-hover-state-background-color:rgba(255, 64, 129, 0.3);--mat-datepicker-calendar-date-in-range-state-background-color:rgba(255, 64, 129, 0.2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color:rgba(249, 171, 0, 0.2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color:#a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color:#46a35e}.mat-datepicker-content.mat-warn{--mat-datepicker-calendar-date-selected-state-text-color:white;--mat-datepicker-calendar-date-selected-state-background-color:#f44336;--mat-datepicker-calendar-date-selected-disabled-state-background-color:rgba(244, 67, 54, 0.4);--mat-datepicker-calendar-date-today-selected-state-outline-color:white;--mat-datepicker-calendar-date-focus-state-background-color:rgba(244, 67, 54, 0.3);--mat-datepicker-calendar-date-hover-state-background-color:rgba(244, 67, 54, 0.3);--mat-datepicker-calendar-date-in-range-state-background-color:rgba(244, 67, 54, 0.2);--mat-datepicker-calendar-date-in-comparison-range-state-background-color:rgba(249, 171, 0, 0.2);--mat-datepicker-calendar-date-in-overlap-range-state-background-color:#a8dab5;--mat-datepicker-calendar-date-in-overlap-range-selected-state-background-color:#46a35e}.mat-datepicker-toggle-active.mat-accent{--mat-datepicker-toggle-active-state-icon-color:#ff4081}.mat-datepicker-toggle-active.mat-warn{--mat-datepicker-toggle-active-state-icon-color:#f44336}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base{--mdc-icon-button-state-layer-size:40px;width:var(--mdc-icon-button-state-layer-size);height:var(--mdc-icon-button-state-layer-size);padding:8px}.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target{display:none}html{--mat-datepicker-calendar-text-font:Roboto, sans-serif;--mat-datepicker-calendar-text-size:13px;--mat-datepicker-calendar-body-label-text-size:14px;--mat-datepicker-calendar-body-label-text-weight:500;--mat-datepicker-calendar-period-button-text-size:14px;--mat-datepicker-calendar-period-button-text-weight:500;--mat-datepicker-calendar-header-text-size:11px;--mat-datepicker-calendar-header-text-weight:400}html{--mat-divider-color:rgba(0, 0, 0, 0.12)}html{--mat-expansion-container-background-color:white;--mat-expansion-container-text-color:rgba(0, 0, 0, 0.87);--mat-expansion-actions-divider-color:rgba(0, 0, 0, 0.12);--mat-expansion-header-hover-state-layer-color:rgba(0, 0, 0, 0.04);--mat-expansion-header-focus-state-layer-color:rgba(0, 0, 0, 0.04);--mat-expansion-header-disabled-state-text-color:rgba(0, 0, 0, 0.26);--mat-expansion-header-text-color:rgba(0, 0, 0, 0.87);--mat-expansion-header-description-color:rgba(0, 0, 0, 0.54);--mat-expansion-header-indicator-color:rgba(0, 0, 0, 0.54)}html{--mat-expansion-header-collapsed-state-height:48px;--mat-expansion-header-expanded-state-height:64px}html{--mat-expansion-header-text-font:Roboto, sans-serif;--mat-expansion-header-text-size:14px;--mat-expansion-header-text-weight:500;--mat-expansion-header-text-line-height:inherit;--mat-expansion-header-text-tracking:inherit;--mat-expansion-container-text-font:Roboto, sans-serif;--mat-expansion-container-text-line-height:20px;--mat-expansion-container-text-size:14px;--mat-expansion-container-text-tracking:0.0178571429em;--mat-expansion-container-text-weight:400}html{--mat-grid-list-tile-header-primary-text-size:14px;--mat-grid-list-tile-header-secondary-text-size:12px;--mat-grid-list-tile-footer-primary-text-size:14px;--mat-grid-list-tile-footer-secondary-text-size:12px}html{--mat-icon-color:inherit}.mat-icon.mat-primary{--mat-icon-color:#3f51b5}.mat-icon.mat-accent{--mat-icon-color:#ff4081}.mat-icon.mat-warn{--mat-icon-color:#f44336}html{--mat-sidenav-container-divider-color:rgba(0, 0, 0, 0.12);--mat-sidenav-container-background-color:white;--mat-sidenav-container-text-color:rgba(0, 0, 0, 0.87);--mat-sidenav-content-background-color:#fafafa;--mat-sidenav-content-text-color:rgba(0, 0, 0, 0.87);--mat-sidenav-scrim-color:rgba(0, 0, 0, 0.6)}html{--mat-stepper-header-icon-foreground-color:white;--mat-stepper-header-selected-state-icon-background-color:#3f51b5;--mat-stepper-header-selected-state-icon-foreground-color:white;--mat-stepper-header-done-state-icon-background-color:#3f51b5;--mat-stepper-header-done-state-icon-foreground-color:white;--mat-stepper-header-edit-state-icon-background-color:#3f51b5;--mat-stepper-header-edit-state-icon-foreground-color:white;--mat-stepper-container-color:white;--mat-stepper-line-color:rgba(0, 0, 0, 0.12);--mat-stepper-header-hover-state-layer-color:rgba(0, 0, 0, 0.04);--mat-stepper-header-focus-state-layer-color:rgba(0, 0, 0, 0.04);--mat-stepper-header-label-text-color:rgba(0, 0, 0, 0.54);--mat-stepper-header-optional-label-text-color:rgba(0, 0, 0, 0.54);--mat-stepper-header-selected-state-label-text-color:rgba(0, 0, 0, 0.87);--mat-stepper-header-error-state-label-text-color:#f44336;--mat-stepper-header-icon-background-color:rgba(0, 0, 0, 0.54);--mat-stepper-header-error-state-icon-foreground-color:#f44336;--mat-stepper-header-error-state-icon-background-color:transparent}html .mat-step-header.mat-accent{--mat-stepper-header-icon-foreground-color:white;--mat-stepper-header-selected-state-icon-background-color:#ff4081;--mat-stepper-header-selected-state-icon-foreground-color:white;--mat-stepper-header-done-state-icon-background-color:#ff4081;--mat-stepper-header-done-state-icon-foreground-color:white;--mat-stepper-header-edit-state-icon-background-color:#ff4081;--mat-stepper-header-edit-state-icon-foreground-color:white}html .mat-step-header.mat-warn{--mat-stepper-header-icon-foreground-color:white;--mat-stepper-header-selected-state-icon-background-color:#f44336;--mat-stepper-header-selected-state-icon-foreground-color:white;--mat-stepper-header-done-state-icon-background-color:#f44336;--mat-stepper-header-done-state-icon-foreground-color:white;--mat-stepper-header-edit-state-icon-background-color:#f44336;--mat-stepper-header-edit-state-icon-foreground-color:white}html{--mat-stepper-header-height:72px}html{--mat-stepper-container-text-font:Roboto, sans-serif;--mat-stepper-header-label-text-font:Roboto, sans-serif;--mat-stepper-header-label-text-size:14px;--mat-stepper-header-label-text-weight:400;--mat-stepper-header-error-state-label-text-size:16px;--mat-stepper-header-selected-state-label-text-size:16px;--mat-stepper-header-selected-state-label-text-weight:400}.mat-sort-header-arrow{color:#757575}html{--mat-toolbar-container-background-color:whitesmoke;--mat-toolbar-container-text-color:rgba(0, 0, 0, 0.87)}.mat-toolbar.mat-primary{--mat-toolbar-container-background-color:#3f51b5;--mat-toolbar-container-text-color:white}.mat-toolbar.mat-accent{--mat-toolbar-container-background-color:#ff4081;--mat-toolbar-container-text-color:white}.mat-toolbar.mat-warn{--mat-toolbar-container-background-color:#f44336;--mat-toolbar-container-text-color:white}html{--mat-toolbar-standard-height:64px;--mat-toolbar-mobile-height:56px}html{--mat-toolbar-title-text-font:Roboto, sans-serif;--mat-toolbar-title-text-line-height:32px;--mat-toolbar-title-text-size:20px;--mat-toolbar-title-text-tracking:0.0125em;--mat-toolbar-title-text-weight:500}.mat-tree{background:#fff}.mat-tree-node,.mat-nested-tree-node{color:rgba(0,0,0,.87)}.mat-tree-node{min-height:48px}.mat-tree{font-family:Roboto, sans-serif}.mat-tree-node,.mat-nested-tree-node{font-weight:400;font-size:14px}.mat-h1,.mat-headline-5,.mat-typography .mat-h1,.mat-typography .mat-headline-5,.mat-typography h1{font-size:24px;font-weight:400;line-height:32px;font-family:Roboto, sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h2,.mat-headline-6,.mat-typography .mat-h2,.mat-typography .mat-headline-6,.mat-typography h2{font-size:20px;font-weight:500;line-height:32px;font-family:Roboto, sans-serif;letter-spacing:.0125em;margin:0 0 16px}.mat-h3,.mat-subtitle-1,.mat-typography .mat-h3,.mat-typography .mat-subtitle-1,.mat-typography h3{font-size:16px;font-weight:400;line-height:28px;font-family:Roboto, sans-serif;letter-spacing:.009375em;margin:0 0 16px}.mat-h4,.mat-body-1,.mat-typography .mat-h4,.mat-typography .mat-body-1,.mat-typography h4{font-size:16px;font-weight:400;line-height:24px;font-family:Roboto, sans-serif;letter-spacing:.03125em;margin:0 0 16px}.mat-h5,.mat-typography .mat-h5,.mat-typography h5{font:400 calc(14px * 0.83)/20px Roboto, sans-serif;margin:0 0 12px}.mat-h6,.mat-typography .mat-h6,.mat-typography h6{font:400 calc(14px * 0.67)/20px Roboto, sans-serif;margin:0 0 12px}.mat-body-strong,.mat-subtitle-2,.mat-typography .mat-body-strong,.mat-typography .mat-subtitle-2{font-size:14px;font-weight:500;line-height:22px;font-family:Roboto, sans-serif;letter-spacing:.0071428571em}.mat-body,.mat-body-2,.mat-typography .mat-body,.mat-typography .mat-body-2,.mat-typography{font-size:14px;font-weight:400;line-height:20px;font-family:Roboto, sans-serif;letter-spacing:.0178571429em}.mat-body p,.mat-body-2 p,.mat-typography .mat-body p,.mat-typography .mat-body-2 p,.mat-typography p{margin:0 0 12px}.mat-small,.mat-caption,.mat-typography .mat-small,.mat-typography .mat-caption{font-size:12px;font-weight:400;line-height:20px;font-family:Roboto, sans-serif;letter-spacing:.0333333333em}.mat-headline-1,.mat-typography .mat-headline-1{font-size:96px;font-weight:300;line-height:96px;font-family:Roboto, sans-serif;letter-spacing:-0.015625em;margin:0 0 56px}.mat-headline-2,.mat-typography .mat-headline-2{font-size:60px;font-weight:300;line-height:60px;font-family:Roboto, sans-serif;letter-spacing:-.0083333333em;margin:0 0 64px}.mat-headline-3,.mat-typography .mat-headline-3{font-size:48px;font-weight:400;line-height:50px;font-family:Roboto, sans-serif;letter-spacing:normal;margin:0 0 64px}.mat-headline-4,.mat-typography .mat-headline-4{font-size:34px;font-weight:400;line-height:40px;font-family:Roboto, sans-serif;letter-spacing:.0073529412em;margin:0 0 64px}","@use '@angular/cdk';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","@use \"@angular/material\" as mat;\n@use \"sass:map\";\n\n$my-palette: mat.$indigo-palette;\n\n@include mat.core();\n\n$my-primary: mat.define-palette(mat.$indigo-palette, 500);\n$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);\n\n$my-theme: mat.define-light-theme(\n  (\n    color: (\n      primary: $my-primary,\n      accent: $my-accent,\n    ),\n  )\n);\n\n// Emit theme-dependent styles for common features used across multiple components.\n@include mat.core-theme($my-theme);\n\n// Emit styles for MatButton based on `$my-theme`. Because the configuration\n// passed to `define-light-theme` omits typography, `button-theme` will not\n// emit any typography styles.\n@include mat.button-theme($my-theme);\n@include mat.all-component-themes($my-theme);\n\n$color-config: mat.get-color-config($my-theme);\n$primary-palette: map.get($color-config, \"primary\");\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-typography p {\n  margin: unset;\n}\n\n.mdc-list-item.mdc-list-item--with-three-lines .mdc-list-item__start,\n.mdc-list-item.mdc-list-item--with-two-lines .mdc-list-item__start,\n.mdc-list-item.mdc-list-item--with-one-line .mdc-list-item__start {\n  margin-top: unset !important;\n  text-align: center !important;\n  align-self: center !important;\n  color: black !important;\n  cursor: pointer !important;\n  // font-size: large;\n}\n\nmat-list-item {\n  color: black !important;\n  cursor: pointer !important;\n}\n\n.mdc-list-item:hover .mdc-list-item__primary-text {\n  color: black !important;\n  cursor: pointer !important;\n}\n\n.mat-drawer-inner-container {\n  overflow-x: hidden !important;\n}\n\n.pswp__caption__center {\n  max-width: 888px !important;\n}\n\n*,\n::after,\n::before {\n  box-sizing: unset !important;\n}\n\n.primary-color {\n  color: mat.get-color-from-palette($primary-palette);\n}\n\n// upright text example\n.side-header {\n  flex: 1 1 20%;\n  writing-mode: vertical-rl;\n  text-orientation: upright;\n  padding: 80px 100px;\n}\n\n.main-content {\n  flex: 1 1 80%;\n}\n\n.page {\n  display: flex;\n  flex-direction: row;\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include mdc-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n","// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n\n/// Include content under the current selector (&) or the document root if there is no current\n/// selector.\n/// @param {String} $root [html] The default root selector to use when there is no current selector.\n/// @output The given content under the current selector, or root selector if there is no current\n///     selector.\n/// @content Content to output under the current selector, or root selector if there is no current\n///     selector.\n@mixin current-selector-or-root($root: html) {\n  @at-root #{& or $root} {\n    @content;\n  }\n}\n\n/// A version of the standard `map.merge` function that takes a variable number of arguments.\n/// Each argument is merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.merge\n/// @return {Map} The combined result of successively calling map.merge with each parameter.\n@function merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.merge($result, $map);\n  }\n  @return $result;\n}\n\n/// A version of the standard `map.deep-merge` function that takes a variable number of arguments.\n/// Each argument is deep-merged into the final result from left to right.\n/// @param {List} $maps The maps to combine with map.deep-merge\n/// @return {Map} The combined result of successively calling map.deep-merge with each parameter.\n@function deep-merge-all($maps...) {\n  $result: ();\n  @each $map in $maps {\n    $result: map.deep-merge($result, $map);\n  }\n  @return $result;\n}\n\n/// Coerces the given value to a list, by converting any non-list value into a single-item list.\n/// This should be used when dealing with user-passed lists of args to avoid confusing errors,\n/// since Sass treats `($x)` as equivalent to `$x`.\n/// @param {Any} $value The value to coerce to a list.\n/// @return {List} The original $value if it was a list, otherwise a single-item list containing\n///     $value.\n@function coerce-to-list($value) {\n  @return if(meta.type-of($value) != 'list', ($value,), $value);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","@use 'sass:map';\n@use '../tokens/m2/mat/option' as tokens-mat-option;\n@use '../tokens/token-utils';\n@use '../style/sass-utils';\n\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include sass-utils.current-selector-or-root() {\n      @include token-utils.create-token-values(tokens-mat-option.$prefix,\n        tokens-mat-option.get-color-tokens($config));\n    }\n\n    .mat-accent {\n      @include token-utils.create-token-values(tokens-mat-option.$prefix,\n        tokens-mat-option.private-get-color-palette-color-tokens(map.get($config, accent)));\n    }\n\n    .mat-warn {\n      @include token-utils.create-token-values(tokens-mat-option.$prefix,\n        tokens-mat-option.private-get-color-palette-color-tokens(map.get($config, warn)));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-option.$prefix,\n      tokens-mat-option.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $background: theming.get-color-from-palette(map.get($config, background), background);\n  $secondary-text: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n@use './typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include ripple-theme.color($config);\n  @include option-theme.color($config);\n  @include optgroup-theme.color($config);\n  @include pseudo-checkbox-theme.color($config);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    $selector: elevation.$prefix + $zValue;\n    // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n    // come with elevation baked in and we don't have a way of removing it.\n    .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n\n  @include option-theme.typography($config);\n  @include optgroup-theme.typography($config);\n  @include pseudo-checkbox-theme.typography($config);\n  // TODO(mmalerba): add typography mixin for this.\n  // @include ripple-theme.typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include option-theme.density($density-scale);\n  @include optgroup-theme.density($density-scale);\n  // TODO(mmalerba): add density mixins for these.\n  // @include ripple-theme.density($density-scale);\n  // @include pseudo-checkbox-theme.density($density-scale);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/button/button' as mdc-button;\n@use '@material/button/button-theme' as mdc-button-theme;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _button-variant($color) {\n  @include mdc-button-text-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin _unelevated-button-variant($foreground, $background) {\n  @include mdc-button-filled-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _raised-button-variant($foreground, $background) {\n  @include mdc-button-protected-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _outlined-button-variant($color) {\n  @include mdc-button-outlined-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n    $disabled-ink-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n    $disabled-container-color: rgba($on-surface, 0.12);\n    $primary: mdc-theme-color.prop-value(primary);\n    $on-primary: mdc-theme-color.prop-value(on-primary);\n    $secondary: mdc-theme-color.prop-value(secondary);\n    $on-secondary: mdc-theme-color.prop-value(on-secondary);\n    $error: mdc-theme-color.prop-value(error);\n    $on-error: mdc-theme-color.prop-value(on-error);\n\n    .mat-mdc-button {\n      &.mat-unthemed {\n        @include _button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-text-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-label-text-color: $disabled-ink-color,\n          label-text-color: $disabled-ink-color\n        ));\n      }\n    }\n\n    .mat-mdc-unelevated-button {\n      &.mat-unthemed {\n        @include _unelevated-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _unelevated-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _unelevated-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _unelevated-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-filled-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n        ));\n      }\n    }\n\n    .mat-mdc-raised-button {\n      &.mat-unthemed {\n        @include _raised-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _raised-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _raised-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _raised-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-protected-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n          container-elevation: 0,\n        ));\n      }\n    }\n\n    .mat-mdc-outlined-button {\n      @include mdc-button-outlined-theme.theme((\n        outline-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12)\n      ));\n\n      &.mat-unthemed {\n        @include _outlined-button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _outlined-button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _outlined-button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _outlined-button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-outlined-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          label-text-color: $disabled-ink-color,\n          disabled-label-text-color: $disabled-ink-color,\n          outline-color: rgba($on-surface, 0.12),\n          disabled-outline-color: rgba($on-surface, 0.12),\n        ));\n      }\n    }\n\n    // Ripple colors\n    .mat-mdc-button, .mat-mdc-outlined-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n    }\n\n    .mat-mdc-raised-button, .mat-mdc-unelevated-button {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-button,\n  .mat-mdc-raised-button,\n  .mat-mdc-unelevated-button,\n  .mat-mdc-outlined-button {\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n    &.mat-mdc-button-base {\n      @include mdc-button-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n      @include button-theme-private.touch-target-density($density-scale);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/ripple/ripple-theme' as mdc-ripple-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use '../core/mdc-helpers/mdc-helpers';\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@mixin ripple-theme-styles($config, $is-filled) {\n  $opacities: if(map.get($config, is-dark),\n    mdc-ripple-theme.$light-ink-opacities, mdc-ripple-theme.$dark-ink-opacities);\n\n  // Ideally these styles would be structural, but MDC bases some of the opacities on the theme.\n  &:hover .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, hover);\n  }\n\n  &.cdk-program-focused,\n  &.cdk-keyboard-focused {\n    .mat-mdc-button-persistent-ripple::before {\n      opacity: map.get($opacities, focus);\n    }\n  }\n\n  &:active .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, press);\n  }\n\n  @include _ripple-color(mdc-theme-color.prop-value(on-surface));\n\n  &.mat-primary {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-primary, primary)));\n  }\n\n  &.mat-accent {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-secondary, secondary)));\n  }\n\n  &.mat-warn {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-error, error)));\n  }\n}\n\n// Wraps the content style in a selector for the disabled state.\n// MDC adds theme color by using :not(:disabled), so just using [disabled] once will not\n// override this, neither will it apply to anchor tags. This needs to override the\n// previously set theme color, so it must be ordered after the theme styles.\n// TODO(andrewseguin): Discuss with the MDC team to see if we can avoid the :not(:disabled) by\n// manually styling disabled buttons with a [disabled] selector.\n@mixin apply-disabled-style() {\n  &[disabled][disabled] {\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/card' as tokens-mat-card;\n@use '../core/tokens/m2/mdc/elevated-card' as tokens-mdc-elevated-card;\n@use '../core/tokens/m2/mdc/outlined-card' as tokens-mdc-outlined-card;\n@use '@material/card/elevated-card-theme' as mdc-elevated-card-theme;\n@use '@material/card/outlined-card-theme' as mdc-outlined-card-theme;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $mdc-elevated-card-color-tokens: token-utils.resolve-elevation(\n      tokens-mdc-elevated-card.get-color-tokens($config),\n      container-elevation,\n      container-shadow-color\n  );\n  $mdc-outlined-card-color-tokens: token-utils.resolve-elevation(\n      tokens-mdc-outlined-card.get-color-tokens($config),\n      container-elevation,\n      container-shadow-color,\n  );\n  $mat-card-color-tokens: tokens-mat-card.get-color-tokens($config);\n\n  // Add values for card tokens.\n  .mat-mdc-card {\n    @include mdc-elevated-card-theme.theme($mdc-elevated-card-color-tokens);\n    @include mdc-outlined-card-theme.theme($mdc-outlined-card-color-tokens);\n    @include token-utils.create-token-values(tokens-mat-card.$prefix, $mat-card-color-tokens);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-elevated-card-typography-tokens: tokens-mdc-elevated-card.get-typography-tokens($config);\n  $mdc-outlined-card-typography-tokens: tokens-mdc-outlined-card.get-typography-tokens($config);\n  $mat-card-typography-tokens: tokens-mat-card.get-typography-tokens($config);\n\n  // Add values for card tokens.\n  .mat-mdc-card {\n    @include mdc-elevated-card-theme.theme($mdc-elevated-card-typography-tokens);\n    @include mdc-outlined-card-theme.theme($mdc-outlined-card-typography-tokens);\n    @include token-utils.create-token-values(tokens-mat-card.$prefix, $mat-card-typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-elevated-card-density-tokens: tokens-mdc-elevated-card.get-density-tokens($density-scale);\n  $mdc-outlined-card-density-tokens: tokens-mdc-outlined-card.get-density-tokens($density-scale);\n  $mat-card-density-tokens: tokens-mat-card.get-density-tokens($density-scale);\n\n  // Add values for card tokens.\n  .mat-mdc-card {\n    @include mdc-elevated-card-theme.theme($mdc-elevated-card-density-tokens);\n    @include mdc-outlined-card-theme.theme($mdc-outlined-card-density-tokens);\n    @include token-utils.create-token-values(tokens-mat-card.$prefix, $mat-card-density-tokens);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    $elevated-card-tokens: map.get($tokens, tokens-mdc-elevated-card.$prefix);\n    // Work around a bug in MDC where the elevation is not resolved to an actual shadow value.\n    $elevated-card-tokens: token-utils.resolve-elevation(\n        $elevated-card-tokens,\n        container-elevation,\n        container-shadow-color\n    );\n    $outlined-card-tokens: map.get($tokens, tokens-mdc-outlined-card.$prefix);\n    // Work around a bug in MDC where the elevation is not resolved to an actual shadow value.\n    $outlined-card-tokens: token-utils.resolve-elevation(\n        $outlined-card-tokens,\n        container-elevation,\n        container-shadow-color\n    );\n    @include mdc-elevated-card-theme.theme($elevated-card-tokens);\n    @include mdc-outlined-card-theme.theme($outlined-card-tokens);\n    @include token-utils.create-token-values(\n        tokens-mat-card.$prefix, map.get($tokens, tokens-mat-card.$prefix));\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/linear-progress' as tokens-mdc-linear-progress;\n@use '@material/linear-progress/linear-progress-theme' as mdc-linear-progress-theme;\n@use 'sass:map';\n\n@mixin _palette-styles($config, $palette-name) {\n  $palette-config: map.merge($config, (primary: map.get($config, $palette-name)));\n  $color-tokens: tokens-mdc-linear-progress.get-color-tokens($palette-config);\n\n  // We can't set the `track-color` using `theme`, because it isn't possible for it to use a CSS\n  // variable since MDC's buffer animation works by constructing an SVG string from this color.\n  // We also can't set the `track-color` by creating our own token slot because the track-color\n  // is set in the SVG string in `theme-styles`.\n  @include mdc-linear-progress-theme.theme-styles((\n    // TODO(crisbeto): the buffer color should come from somewhere in MDC, however at the time of\n    // writing, their buffer color is hardcoded to #e6e6e6 which both doesn't account for theming\n    // and doesn't match the Material design spec. For now we approximate the buffer background by\n    // applying an opacity to the color of the bar.\n    track-color: map.get($color-tokens, track-color),\n  ));\n\n  @include mdc-linear-progress-theme.theme($color-tokens);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-progress-bar {\n    @include _palette-styles($config, primary);\n\n    &.mat-accent {\n      @include _palette-styles($config, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($config, warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:string';\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/keys';\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n\n$custom-property-prefix: 'linear-progress';\n\n// TODO(b/254889918): Support all linear progress tokens.\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  active-indicator-height: 4px,\n  track-color: $baseline-buffer-color,\n  track-height: 4px,\n  track-shape: 0px,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include buffering-keyframes(map.get($theme, track-height), $query);\n  @include bar-color(map.get($theme, active-indicator-color), $query);\n  @include buffer-color(map.get($theme, track-color), $query);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        height,\n        'max(track-height, bar-height)',\n        $replace: (\n          track-height: map.get($theme, track-height),\n          bar-height: map.get($theme, active-indicator-height)\n        )\n      );\n\n      @include dom.ie11-support() {\n        $track-height: map.get($theme, track-height);\n        $track-height: if(\n          custom-properties.is-custom-prop($track-height),\n          custom-properties.get-fallback($track-height),\n          $track-height\n        );\n\n        $bar-height: map.get($theme, active-indicator-height);\n        $bar-height: if(\n          custom-properties.is-custom-prop($bar-height),\n          custom-properties.get-fallback($bar-height),\n          $bar-height\n        );\n\n        @if ($track-height != null) and\n          ($bar-height != null) and\n          (not custom-properties.is-custom-prop-string($track-height)) and\n          (not custom-properties.is-custom-prop-string($bar-height))\n        {\n          @include theme.property(height, math.max($track-height, $bar-height));\n        }\n      }\n    }\n  }\n\n  @include _bar-height(map.get($theme, active-indicator-height), $query);\n  @include _track-height(map.get($theme, track-height), $query);\n  @include _track-shape(map.get($theme, track-shape), $query);\n\n  // TODO(b/155129310): Add styles for 4-color linear progress once this variant\n  // is supported.\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $concrete-color: $color;\n  @if custom-properties.is-custom-prop($color) {\n    $concrete-color: custom-properties.get-fallback($color);\n  }\n  $concrete-color-for-svg: str-replace_(\n    string.unquote('#{$concrete-color}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n\n      @media (forced-colors: active) {\n        background-color: ButtonBorder;\n      }\n\n      @include dom.ie11-support() {\n        background-color: transparent;\n        // stylelint-disable function-url-quotes -- SVG data URI\n        // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n        @include theme.property(\n          background-image,\n          url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='concrete-color-for-svg'/%3E%3C/svg%3E\"),\n          $replace: (concrete-color-for-svg: $concrete-color-for-svg)\n        );\n        // stylelint-enable function-url-quotes\n      }\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n/// @deprecated Use Theming API instead.\n@mixin bar-and-track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n\n  @include _bar-height($height, $query);\n  @include _track-height($height, $query);\n}\n\n@mixin buffering-keyframes($track-height, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-linear-progress-buffering {\n      from {\n        // Normally the buffer dots start from the left and overflow to the right.\n        // We rotate by 180deg so that the buffer dots start on the right when\n        // in non-reversed mode and overflow to the left.\n        @include rtl.ignore-next-line();\n        @include theme.property(\n          transform,\n          'rotate(180deg) translateX(calc(track-height * -2.5))',\n          $replace: (track-height: $track-height)\n        );\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n\n@mixin _bar-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__bar {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__bar-inner {\n      @include theme.property(border-top-width, $height);\n    }\n  }\n}\n\n@mixin _track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(height, $height);\n    }\n\n    .mdc-linear-progress__buffer-dots {\n      @include dom.ie11-support() {\n        @include theme.property(\n          background-size,\n          10px height,\n          $replace: (height: $height)\n        );\n      }\n    }\n  }\n}\n\n@mixin _track-shape($shape, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-linear-progress__buffer {\n      @include theme.property(border-radius, $shape);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    @include rtl.ignore-next-line();\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","@use '@material/tooltip/plain-tooltip-theme' as mdc-plain-tooltip-theme;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/plain-tooltip' as m2-mdc-plain-tooltip;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $mdc-tooltip-color-tokens: m2-mdc-plain-tooltip.get-color-tokens($config);\n\n  // Add values for MDC tooltip tokens.\n  .mat-mdc-tooltip {\n    @include mdc-plain-tooltip-theme.theme($mdc-tooltip-color-tokens);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n  $mdc-tooltip-typography-tokens: m2-mdc-plain-tooltip.get-typography-tokens($config);\n\n  // Add values for MDC tooltip tokens.\n  .mat-mdc-tooltip {\n    @include mdc-plain-tooltip-theme.theme($mdc-tooltip-typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-tooltip-density-tokens: m2-mdc-plain-tooltip.get-density-tokens($density-scale);\n\n  // Add values for MDC tooltip tokens.\n  .mat-mdc-tooltip {\n    @include mdc-plain-tooltip-theme.theme($mdc-tooltip-density-tokens);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/typography' as mdc-typography;\n@use '@material/textfield/variables' as mdc-textfield-variables;\n\n@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;\n@use '../core/tokens/token-utils';\n@use './form-field-sizing';\n\n@mixin private-form-field-subscript() {\n  // Wrapper for the hints and error messages.\n  .mat-mdc-form-field-subscript-wrapper {\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n\n  .mat-mdc-form-field-hint-wrapper,\n  .mat-mdc-form-field-error-wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: 0 mdc-textfield-variables.$padding-horizontal;\n  }\n\n  .mat-mdc-form-field-subscript-dynamic-size {\n    .mat-mdc-form-field-hint-wrapper,\n    .mat-mdc-form-field-error-wrapper {\n      position: static;\n    }\n  }\n\n  .mat-mdc-form-field-bottom-align::before {\n    content: '';\n    display: inline-block;\n    height: 16px;\n  }\n\n  .mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before {\n    content: unset;\n  }\n\n  .mat-mdc-form-field-hint-end {\n    order: 1;\n  }\n\n  // Clears the floats on the hints. This is necessary for the hint animation to work.\n  .mat-mdc-form-field-hint-wrapper {\n    display: flex;\n  }\n\n  // Spacer used to make sure start and end hints have enough space between them.\n  .mat-mdc-form-field-hint-spacer {\n    flex: 1 0 form-field-sizing.$mat-form-field-hint-min-space;\n  }\n\n  // Single error message displayed beneath the form field underline.\n  .mat-mdc-form-field-error {\n    display: block;\n  }\n}\n\n@mixin private-form-field-subscript-color() {\n  // MDC does not have built-in error treatment.\n  .mat-mdc-form-field-error {\n    @include mdc-theme.prop(color, mdc-textfield.$error);\n  }\n\n  // The subscript wrapper has a minimum height to avoid that the form-field\n  // jumps when hints or errors are displayed.\n  .mat-mdc-form-field-subscript-wrapper,\n  .mat-mdc-form-field-bottom-align::before {\n    @include token-utils.use-tokens(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-token-slots()) {\n      @include mdc-typography.smooth-font();\n      @include token-utils.create-token-slot(font-family, subscript-text-font);\n      @include token-utils.create-token-slot(line-height, subscript-text-line-height);\n      @include token-utils.create-token-slot(font-size, subscript-text-size);\n      @include token-utils.create-token-slot(letter-spacing, subscript-text-tracking);\n      @include token-utils.create-token-slot(font-weight, subscript-text-weight);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n\n/// Resolves a theme's typography tokens for the given prefix.\n///\n/// @example - scss\n///   // $theme has the following tokens:\n///   // - label-text-font\n///   // - label-text-line-height\n///   // - label-text-size\n///   // - label-text-tracking\n///   // - label-text-weight\n///   $theme: resolve-theme($theme, map.get($resolvers, typography), label-text);\n///\n/// @param {Map} $theme - The theme to resolve tokens for.\n/// @param {Function} $resolver - The typography resolver to use.\n/// @param {String...} $token-prefixes - The prefix(es) of a typography token\n///     set.\n/// @return {Map} The theme with resolved typography tokens.\n@function resolve-theme($theme, $resolver, $token-prefixes...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $token-prefix in $token-prefixes {\n    $typography-theme: meta.call(\n      $resolver,\n      $font: map.get($theme, '#{$token-prefix}-font'),\n      $line-height: map.get($theme, '#{$token-prefix}-line-height'),\n      $size: map.get($theme, '#{$token-prefix}-size'),\n      $tracking: map.get($theme, '#{$token-prefix}-tracking'),\n      $weight: map.get($theme, '#{$token-prefix}-weight')\n    );\n\n    $theme: map.merge(\n      $theme,\n      (\n        '#{$token-prefix}-font': map.get($typography-theme, font),\n        '#{$token-prefix}-line-height': map.get($typography-theme, line-height),\n        '#{$token-prefix}-size': map.get($typography-theme, size),\n        '#{$token-prefix}-tracking': map.get($typography-theme, tracking),\n        '#{$token-prefix}-weight': map.get($typography-theme, weight),\n      )\n    );\n  }\n\n  @return $theme;\n}\n","@use '@material/ripple/functions' as mdc-ripple-functions;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/style/layout-common';\n\n// MDC text-field uses `@material/ripple` in order to show a focus and hover effect for\n// text-fields. This is unnecessary because the ripples bring in a lot of unnecessary\n// styles and runtime code while the actual goal for the text-field is simply showing a\n// focus and hover effect. The ripples will unnecessarily provide CSS selectors and JS\n// runtime code for launching interaction ripples at pointer location. This is not needed\n// for the text-field, so we create our own minimal focus overlay styles. Our focus overlay\n// uses the exact same logic to compute the colors as in the default MDC text-field ripples.\n@mixin private-form-field-focus-overlay() {\n  .mat-mdc-form-field-focus-overlay {\n    @include layout-common.fill;\n    opacity: 0;\n    // Make sure we don't block click on the prefix/suffix.\n    pointer-events: none;\n  }\n}\n\n@mixin private-form-field-focus-overlay-color() {\n  $focus-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, focus);\n  $hover-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, hover);\n\n  .mat-mdc-form-field-focus-overlay {\n    background-color: mdc-textfield.$ink-color;\n  }\n\n  .mat-mdc-form-field:hover .mat-mdc-form-field-focus-overlay {\n    opacity: $hover-opacity;\n  }\n\n  .mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay {\n    opacity: $focus-opacity;\n  }\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use 'sass:color';\n@use 'sass:meta';\n\n// Mixin that refreshes the MDC text-field theming variables. This mixin should be used when\n// the base MDC theming variables have been explicitly updated, but the component specific\n// theming-based variables are still based on the old MDC base theming variables. The mixin\n// restores the previous values for the variables to avoid unexpected global side effects.\n@mixin private-text-field-refresh-theme-variables() {\n  $_disabled-border: mdc-textfield.$disabled-border;\n  mdc-textfield.$disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_bottom-line-hover: mdc-textfield.$bottom-line-hover;\n  mdc-textfield.$bottom-line-hover:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_bottom-line-idle: mdc-textfield.$bottom-line-idle;\n  mdc-textfield.$bottom-line-idle:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.42);\n  $_label: mdc-textfield.$label;\n  mdc-textfield.$label: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_ink-color: mdc-textfield.$ink-color;\n  mdc-textfield.$ink-color: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_focused-label-color: mdc-textfield.$focused-label-color;\n  mdc-textfield.$focused-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(primary), 0.87);\n  $_placeholder-ink-color: mdc-textfield.$placeholder-ink-color;\n  mdc-textfield.$placeholder-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_disabled-label-color: mdc-textfield.$disabled-label-color;\n  mdc-textfield.$disabled-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-ink-color: mdc-textfield.$disabled-ink-color;\n  mdc-textfield.$disabled-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-placeholder-ink-color: mdc-textfield.$disabled-placeholder-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color:\n      _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_background: mdc-textfield.$background;\n  mdc-textfield.$background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 4%);\n  $_disabled-background: mdc-textfield.$disabled-background;\n  mdc-textfield.$disabled-background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 2%);\n  $_outlined-idle-border: mdc-textfield.$outlined-idle-border;\n  mdc-textfield.$outlined-idle-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_outlined-disabled-border: mdc-textfield.$outlined-disabled-border;\n  mdc-textfield.$outlined-disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_outlined-hover-border: mdc-textfield.$outlined-hover-border;\n  mdc-textfield.$outlined-hover-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n\n  // The content will be generated with the refreshed MDC text-field theming variables.\n  @content;\n\n  // Reset all variables to ensure that this mixin does not cause unexpected side effects.\n  mdc-textfield.$disabled-border: $_disabled-border;\n  mdc-textfield.$bottom-line-hover: $_bottom-line-hover;\n  mdc-textfield.$bottom-line-idle: $_bottom-line-idle;\n  mdc-textfield.$label: $_label;\n  mdc-textfield.$ink-color: $_ink-color;\n  mdc-textfield.$focused-label-color: $_focused-label-color;\n  mdc-textfield.$placeholder-ink-color: $_placeholder-ink-color;\n  mdc-textfield.$disabled-label-color: $_disabled-label-color;\n  mdc-textfield.$disabled-ink-color: $_disabled-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color: $_disabled-placeholder-ink-color;\n  mdc-textfield.$background: $_background;\n  mdc-textfield.$disabled-background: $_disabled-background;\n  mdc-textfield.$outlined-idle-border: $_outlined-idle-border;\n  mdc-textfield.$outlined-disabled-border: $_outlined-disabled-border;\n  mdc-textfield.$outlined-hover-border: $_outlined-hover-border;\n}\n\n@function _variable-safe-rgba($color, $opacity) {\n  @if (meta.type-of($color) == color) {\n    @return rgba($color, $opacity);\n  }\n  @return $color;\n}\n\n@function _variable-safe-mix($first-color, $second-color, $amount) {\n  @if (meta.type-of($first-color) == color and meta.type-of($second-color) == color) {\n    @return color.mix($first-color, $second-color, $amount);\n  }\n  @return $first-color;\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/theming/palette';\n@use '../core/mdc-helpers/mdc-helpers';\n\n// Width of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-width: 10px;\n// Height of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-height: 5px;\n// Horizontal padding that needs to be applied to the native select in an form-field so\n// that the absolute positioned arrow does not overlap the select content.\n$mat-form-field-select-horizontal-end-padding: $mat-form-field-select-arrow-width + 5px;\n\n// Mixin that creates styles for native select controls in a form-field.\n@mixin private-form-field-native-select() {\n  // Remove the native select down arrow and ensure that the native appearance\n  // does not conflict with the form-field. e.g. Focus indication of the native\n  // select is undesired since we handle focus as part of the form-field.\n  select.mat-mdc-form-field-input-control {\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    background-color: transparent;\n    display: inline-flex;\n    box-sizing: border-box;\n\n    // By default the cursor does not change when hovering over a select. We want to\n    // change this for non-disabled select elements so that it's more obvious that the\n    // control can be clicked.\n    &:not(:disabled) {\n      cursor: pointer;\n    }\n  }\n\n  // Native select elements with the `matInput` directive should have Material Design\n  // styling. This means that we add an arrow to the form-field that is based on the\n  // Material Design specification. We achieve this by adding a pseudo element to the\n  // form-field infix.\n  .mat-mdc-form-field-type-mat-native-select {\n    .mat-mdc-form-field-infix::after {\n      content: '';\n      width: 0;\n      height: 0;\n      border-left: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-right: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-top: $mat-form-field-select-arrow-height solid;\n      position: absolute;\n      right: 0;\n      top: 50%;\n      margin-top: -#{math.div($mat-form-field-select-arrow-height, 2)};\n\n      // Make the arrow non-clickable so the user can click on the form control under it.\n      pointer-events: none;\n\n      [dir='rtl'] & {\n        right: auto;\n        left: 0;\n      }\n    }\n\n    // Add padding on the end of the native select so that the content does not\n    // overlap with the Material Design arrow.\n    .mat-mdc-form-field-input-control {\n      padding-right: $mat-form-field-select-horizontal-end-padding;\n      [dir='rtl'] & {\n        padding-right: 0;\n        padding-left: $mat-form-field-select-horizontal-end-padding;\n      }\n    }\n  }\n}\n\n// Gets the color to use for some text that is highlighted while a select has focus.\n@function _get-focused-arrow-color($palette) {\n  @return rgba(mdc-theme-color.prop-value($palette), 0.87);\n}\n\n@mixin private-form-field-native-select-color($config) {\n  @include mdc-helpers.using-mdc-theme($config) {\n    // These values are taken from the MDC select implementation:\n    // https://github.com/material-components/material-components-web/blob/master/packages/mdc-select/_select-theme.scss\n    $dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.54);\n    $disabled-dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.38);\n\n    select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) {\n      // On dark themes we set the native `select` color to some shade of white,\n      // however the color propagates to all of the `option` elements, which are\n      // always on a white background inside the dropdown, causing them to blend in.\n      // Since we can't change background of the dropdown, we need to explicitly\n      // reset the color of the options to something dark.\n      @if (map.get($config, is-dark)) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n\n    .mat-mdc-form-field-type-mat-native-select {\n      .mat-mdc-form-field-infix::after {\n        color: $dropdown-icon-color;\n      }\n\n      &.mat-focused {\n        &.mat-primary {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(primary);\n          }\n        }\n\n        &.mat-accent {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(secondary);\n          }\n        }\n\n        &.mat-warn {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(error);\n          }\n        }\n      }\n\n      &.mat-form-field-disabled {\n        .mat-mdc-form-field-infix::after {\n          color: $disabled-dropdown-icon-color;\n        }\n      }\n    }\n  }\n}\n","@use '@material/textfield/filled-text-field-theme' as mdc-filled-text-field-theme;\n@use '@material/textfield/outlined-text-field-theme' as mdc-outlined-text-field-theme;\n\n@use '../core/tokens/m2/mdc/filled-text-field' as tokens-mdc-filled-text-field;\n@use '../core/tokens/m2/mdc/outlined-text-field' as tokens-mdc-outlined-text-field;\n@use '../core/tokens/m2/mat/form-field' as tokens-mat-form-field;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use './form-field-density';\n@use './form-field-subscript';\n@use './form-field-focus-overlay';\n@use './form-field-native-select';\n@use './mdc-text-field-theme-variable-refresh';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-color-tokens($config));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-color-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-color-tokens($config));\n  }\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include mdc-text-field-theme-variable-refresh.private-text-field-refresh-theme-variables() {\n      @include form-field-subscript.private-form-field-subscript-color();\n      @include form-field-focus-overlay.private-form-field-focus-overlay-color();\n      @include form-field-native-select.private-form-field-native-select-color($config);\n\n      .mat-mdc-form-field.mat-accent {\n        @include mdc-filled-text-field-theme.theme(\n          tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($config, accent));\n        @include mdc-outlined-text-field-theme.theme(\n          tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($config, accent));\n      }\n\n      .mat-mdc-form-field.mat-warn {\n        @include mdc-filled-text-field-theme.theme(\n          tokens-mdc-filled-text-field.private-get-color-palette-color-tokens($config, warn));\n        @include mdc-outlined-text-field-theme.theme(\n          tokens-mdc-outlined-text-field.private-get-color-palette-color-tokens($config, warn));\n      }\n\n      // This fixes an issue where the notch appears to be thicker than the rest of the outline when\n      // zoomed in on Chrome. The border inconsistency seems to be some kind of rendering artifact\n      // that arises from a combination of the fact that the notch contains text, while the leading\n      // and trailing outline do not, combined with the fact that the border is semi-transparent.\n      // Experimentally, I discovered that adding a transparent left border fixes the inconsistency.\n      // Note: class name is repeated to achieve sufficient specificity over the various MDC states.\n      // (hover, focus, etc.)\n      // TODO(mmalerba): port this fix into MDC\n      // TODO(crisbeto): move this into the structural styles\n      .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n        &.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n          border-left: 1px solid transparent;\n        }\n      }\n\n      [dir='rtl'] {\n        .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n          &.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n            border-left: none;\n            border-right: 1px solid transparent;\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-filled-text-field-theme.theme(\n      tokens-mdc-filled-text-field.get-typography-tokens($config));\n    @include mdc-outlined-text-field-theme.theme(\n      tokens-mdc-outlined-text-field.get-typography-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-form-field.$prefix,\n      tokens-mat-form-field.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-density.private-form-field-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/theming/theming';\n\n@use './form-field-sizing';\n\n// Mixin that sets the vertical spacing for the infix container of filled form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-filled($with-label-padding, $no-label-padding) {\n  .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n    padding-top: map.get($with-label-padding, top);\n    padding-bottom: map.get($with-label-padding, bottom);\n  }\n\n  .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)\n  .mat-mdc-form-field-infix {\n    padding-top: map.get($no-label-padding, top);\n    padding-bottom: map.get($no-label-padding, bottom);\n  }\n}\n\n// Mixin that sets the vertical spacing for the infix container of outlined form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-outlined($padding) {\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n    padding-top: map.get($padding, top);\n    padding-bottom: map.get($padding, bottom);\n  }\n}\n\n// Mixin that includes the density styles for form fields. MDC provides their own density\n// styles for MDC text-field which we cannot use. MDC relies on input elements to stretch\n// vertically when the height is reduced as per density scale. This doesn't work for our\n// form field since we support custom form field controls without a fixed height. Instead, we\n// provide spacing that makes arbitrary controls align as specified in the Material Design\n// specification. In order to support density, we need to adjust the vertical spacing to be\n// based on the density scale.\n@mixin private-form-field-density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  // Height of the form field that is based on the current density scale.\n  $height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  // Whether floating labels for filled form fields should be hidden. MDC hides the label in\n  // their density styles when the height decreases too much. We match their density styles.\n  $hide-filled-floating-label: $height < mdc-textfield.$minimum-height-for-filled-label;\n  // We computed the desired height of the form-field using the density configuration. The\n  // spec only describes vertical spacing/alignment in non-dense mode. This means that we\n  // cannot update the spacing to explicit numbers based on the density scale. Instead, we\n  // determine the height reduction and equally subtract it from the default `top` and `bottom`\n  // padding that is provided by the Material Design specification.\n  $vertical-deduction: math.div(mdc-textfield.$height - $height, 2);\n  // Map that describes the padding for form-fields with label.\n  $with-label-padding: (\n    top: form-field-sizing.$mat-form-field-with-label-input-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-with-label-input-padding-bottom - $vertical-deduction,\n  );\n  // Map that describes the padding for form-fields without label.\n  $no-label-padding: (\n    top: form-field-sizing.$mat-form-field-no-label-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-no-label-padding-bottom - $vertical-deduction,\n  );\n\n  // We add a minimum height to the infix container in order to ensure that custom controls have\n  // the same default vertical space as text-field inputs (with respect to the vertical padding).\n  .mat-mdc-form-field-infix {\n    min-height: $height;\n  }\n\n  // By default, MDC aligns the label using percentage. This will be overwritten based\n  // on whether a textarea is used. This is not possible in our implementation of the\n  // form-field because we do not know what type of form-field control is set up. Hence\n  // we always use a fixed position for the label. This does not have any implications.\n  .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n    top: math.div($height, 2);\n  }\n\n  // For the outline appearance, we re-create the active floating label transform. This is\n  // necessary because the transform for docked floating labels can be updated to account for\n  // the width of prefix container.\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded\n  .mdc-floating-label--float-above {\n    --mat-mdc-form-field-label-transform: translateY(\n            -#{mdc-textfield.get-outlined-label-position-y($height)})\n            scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n    transform: var(--mat-mdc-form-field-label-transform);\n  }\n\n  // Add vertical spacing to the infix to ensure that outlined form fields have their controls\n  // aligned as if there is no label. This is done similarly in MDC and is specified in the\n  // Material Design specification. Outline form fields position the control as if there is no\n  // label. This is because the label overflows the form-field and doesn't need space at the top.\n  @include _infix-vertical-spacing-outlined($no-label-padding);\n\n  // MDC hides labels for filled form fields when the form field height decreases. We match\n  // this behavior in our custom density styles.\n  @if $hide-filled-floating-label {\n    // Update the spacing for filled form fields to account for the hidden floating label.\n    @include _infix-vertical-spacing-filled(\n          $no-label-padding, $no-label-padding);\n    .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n        display: none;\n    }\n  }\n  @else {\n    // By default, filled form fields align their controls differently based on whether there\n    // is a label or not. MDC does this too, but we cannot rely on their styles as we support\n    // arbitrary form field controls and MDC only applies their spacing to the `<input>` elements.\n    @include _infix-vertical-spacing-filled(\n          $with-label-padding, $no-label-padding);\n  }\n}\n","@use 'sass:map';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/tokens/m2/mat/select' as tokens-mat-select;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-color-tokens($config));\n\n    .mat-mdc-form-field.mat-accent {\n      $accent: map.get($config, accent);\n      $accent-config: map.merge($config, (primary: $accent));\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($accent-config));\n    }\n\n    .mat-mdc-form-field.mat-warn {\n      $warn: map.get($config, warn);\n      $warn-config: map.merge($config, (primary: $warn));\n      @include token-utils.create-token-values(tokens-mat-select.$prefix,\n        tokens-mat-select.get-color-tokens($warn-config));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // Density is clamped at -5 here, because MDC's form field throws an error for anything lower.\n  $form-field-height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: theming.clamp-density($density-scale, -5),\n    $property-name: height,\n  );\n\n  // On lower densities the filled form field hides its label which causes the label to\n  // be misaligned. Remove the additional offset that was added because of the label.\n  @if ($form-field-height < mdc-textfield.$minimum-height-for-filled-label) {\n    .mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper {\n      transform: none;\n    }\n  }\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-select.$prefix,\n      tokens-mat-select.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/dialog/dialog-theme' as mdc-dialog-theme;\n@use '../core/tokens/m2/mdc/dialog' as tokens-mdc-dialog;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-dialog-container {\n    @include mdc-dialog-theme.theme(tokens-mdc-dialog.get-color-tokens($config));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-dialog-container {\n    @include mdc-dialog-theme.theme(tokens-mdc-dialog.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/chips/chip-theme' as mdc-chip-theme;\n@use '../core/tokens/m2/mdc/chip' as tokens-mdc-chip;\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n\n@function _get-default-palette($config) {\n  $is-dark: map.get($config, is-dark);\n  $grey-50: map.get(palette.$grey-palette, 50);\n  $grey-900: map.get(palette.$grey-palette, 900);\n  $default-foreground: if($is-dark, $grey-50, $grey-900);\n\n  $surface: map.get(map.get($config, background), card);\n  $on-surface: if(\n    mdc-helpers.variable-safe-contrast-tone($surface, $is-dark) == 'dark',\n    #000,\n    #fff\n  );\n  $default-background: if(\n    meta.type-of($on-surface) == color and meta.type-of($surface) == color,\n    color.mix($on-surface, $surface, 12%),\n    $on-surface\n  );\n\n  @return (default: $default-background, default-contrast: $default-foreground);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-standard-chip {\n    $default-palette: _get-default-palette($config);\n    $default-config: map.merge($config, (primary: $default-palette));\n    $default-color-tokens: tokens-mdc-chip.get-color-tokens($default-config);\n    @include mdc-chip-theme.theme($default-color-tokens);\n\n    &.mat-mdc-chip-selected,\n    &.mat-mdc-chip-highlighted {\n      &.mat-primary {\n        $primary-color-tokens: tokens-mdc-chip.get-color-tokens($config);\n        @include mdc-chip-theme.theme($primary-color-tokens);\n      }\n\n      &.mat-accent {\n        $accent-config: map.merge($config, (primary: map.get($config, accent)));\n        $accent-color-tokens: tokens-mdc-chip.get-color-tokens($accent-config);\n        @include mdc-chip-theme.theme($accent-color-tokens);\n      }\n\n      &.mat-warn {\n        $warn-config: map.merge($config, (primary: map.get($config, warn)));\n        $warn-color-tokens: tokens-mdc-chip.get-color-tokens($warn-config);\n        @include mdc-chip-theme.theme($warn-color-tokens);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme)\n  );\n  $typography-tokens: tokens-mdc-chip.get-typography-tokens($config);\n\n  .mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $density-tokens: tokens-mdc-chip.get-density-tokens($density-scale);\n  .mat-mdc-chip.mat-mdc-standard-chip {\n    @include mdc-chip-theme.theme($density-tokens);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/switch/switch-theme' as mdc-switch-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/switch' as m2-mdc-switch;\n@use '../core/tokens/m2/mat/slide-toggle' as m2-mat-slide-toggle;\n@use '../core/tokens/token-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $is-dark: map.get($config, is-dark);\n  $foreground: map.get($config, foreground);\n\n  $mdc-switch-color-tokens: m2-mdc-switch.get-color-tokens($config);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    // Add values for MDC slide toggles tokens\n    .mat-mdc-slide-toggle {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-switch-theme.theme($mdc-switch-color-tokens);\n\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      .mdc-switch--disabled + label {\n        color: theming.get-color-from-palette($foreground, disabled-text);\n      }\n\n      // Change the color palette related tokens to accent or warn if applicable\n      &.mat-accent {\n        @include mdc-switch-theme.theme(m2-mdc-switch.private-get-color-palette-color-tokens(\n          map.get($config, accent),\n          map.get($config, is-dark)\n        ));\n      }\n\n      &.mat-warn {\n        @include mdc-switch-theme.theme(m2-mdc-switch.private-get-color-palette-color-tokens(\n          map.get($config, warn),\n          map.get($config, is-dark)\n        ));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-switch-typography-tokens: m2-mdc-switch.get-typography-tokens($config);\n  $mat-slide-toggle-typography-tokens: m2-mat-slide-toggle.get-typography-tokens($config);\n\n  //Add values for MDC slide toggle tokens\n  .mat-mdc-slide-toggle {\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-switch-theme.theme($mdc-switch-typography-tokens);\n    @include token-utils.create-token-values(\n      m2-mat-slide-toggle.$prefix,\n      $mat-slide-toggle-typography-tokens\n    );\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-slide-toggle {\n    @include mdc-switch-theme.theme(mdc-switch-theme.density($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2023 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './form-field-theme';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include static-styles($query);\n\n  // TODO: Replace with call to theme-styles after Angular moves to Theming API\n  .mdc-form-field {\n    @include typography.typography(body2, $query);\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n  }\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-form-field {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      &[hidden] {\n        display: none;\n      }\n      align-items: center;\n      vertical-align: middle;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, 0, auto);\n        @include rtl.reflexive-property(padding, variables.$item-spacing, 0);\n\n        order: 0;\n      }\n    }\n  }\n\n  .mdc-form-field--nowrap {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  .mdc-form-field--align-end {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, auto, 0);\n        @include rtl.reflexive-property(padding, 0, variables.$item-spacing);\n\n        order: -1;\n      }\n    }\n  }\n\n  .mdc-form-field--space-between {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0;\n\n        @include rtl.rtl {\n          // RTL needed for specificity\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n","@use '@material/radio/radio' as mdc-radio;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/tokens/token-utils';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mat/radio' as tokens-mat-radio;\n@use 'sass:map';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-radio-button {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n    }\n  }\n\n  .mat-mdc-radio-button {\n    &.mat-primary {\n      $primary-config: map.merge($config, (accent: $primary));\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($primary-config));\n      @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n        tokens-mat-radio.get-color-tokens($primary-config));\n    }\n\n    &.mat-accent {\n      $accent-config: map.merge($config, (accent: $accent));\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($accent-config));\n      @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n        tokens-mat-radio.get-color-tokens($accent-config));\n    }\n\n    &.mat-warn {\n      $warn-config: map.merge($config, (accent: $warn));\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($warn-config));\n      @include token-utils.create-token-values(tokens-mat-radio.$prefix,\n        tokens-mat-radio.get-color-tokens($warn-config));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-radio-button {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-typography-tokens($config));\n    @include mdc-helpers.using-mdc-typography($config) {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-radio-button .mdc-radio {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-density-tokens($density-scale));\n  }\n\n  @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n    .mat-mdc-radio-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n\n@use '@material/slider/slider-theme' as mdc-slider-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography/typography' as mdc-typography;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-slider {\n      $is-dark: map.get($config, is-dark);\n      $on-surface: mdc-theme-color.prop-value(on-surface);\n\n      @include mdc-slider-theme.theme((\n        label-container-color: if($is-dark, white, black),\n        label-label-text-color: if($is-dark, black, white),\n        disabled-handle-color: $on-surface,\n        disabled-active-track-color: $on-surface,\n        disabled-inactive-track-color: $on-surface,\n        with-tick-marks-disabled-container-color: $on-surface,\n      ));\n\n      // Note that technically we can control this using an `rgba` color in `label-container-color`.\n      // We don't do it, because the shapes MDC uses to construct the indicator overlap which causes\n      // their color opacities to stack with an `rgba` color.\n      --mat-mdc-slider-value-indicator-opacity: #{if($is-dark, 0.9, 0.6)};\n\n      &.mat-primary {\n        @include _slider-color(primary, on-primary);\n      }\n\n      &.mat-accent {\n        @include _slider-color(secondary, on-secondary);\n      }\n\n      &.mat-warn {\n        @include _slider-color(error, on-error);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-slider {\n      @include mdc-slider-theme.theme((\n        label-label-text-font: mdc-typography.get-font(subtitle2),\n        label-label-text-size: mdc-typography.get-size(subtitle2),\n        label-label-text-line-height: mdc-typography.get-line-height(subtitle2),\n        label-label-text-tracking: mdc-typography.get-tracking(subtitle2),\n        label-label-text-weight: mdc-typography.get-weight(subtitle2),\n      ));\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin _slider-color($color, $on-color) {\n  $ripple-color: map.get(mdc-theme-variables.$property-values, $color);\n  $resolved-color: mdc-theme-color.prop-value($color);\n  $resolved-on-color: mdc-theme-color.prop-value($on-color);\n\n  @include mdc-slider-theme.theme((\n    handle-color: $resolved-color,\n    focus-handle-color: $resolved-color,\n    hover-handle-color: $resolved-color,\n    active-track-color: $resolved-color,\n    inactive-track-color: $resolved-color,\n    with-tick-marks-active-container-color: $resolved-on-color,\n    with-tick-marks-inactive-container-color: $resolved-color,\n  ));\n\n  --mat-mdc-slider-ripple-color: #{$ripple-color};\n  --mat-mdc-slider-hover-ripple-color: #{rgba($ripple-color, 0.05)};\n  --mat-mdc-slider-focus-ripple-color: #{rgba($ripple-color, 0.2)};\n}\n","@use 'sass:map';\n@use '@material/list/evolution-mixins';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/list/list-theme' as mdc-list-theme;\n\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n@use '../core/tokens/m2/mdc/radio' as tokens-mdc-radio;\n@use '../core/tokens/m2/mdc/list' as tokens-mdc-list;\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $mdc-list-color-tokens: tokens-mdc-list.get-color-tokens($config);\n  $inner-control-primary: map.merge($config, (accent: $primary));\n  $inner-control-accent: map.merge($config, (accent: $accent));\n  $inner-control-warn: map.merge($config, (accent: $warn));\n\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-color-tokens);\n  }\n\n  .mdc-list-item__start,\n  .mdc-list-item__end {\n    @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($inner-control-primary));\n  }\n\n  .mat-accent {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($inner-control-accent));\n    }\n  }\n\n  .mat-warn {\n    .mdc-list-item__start,\n    .mdc-list-item__end {\n      @include mdc-radio-theme.theme(tokens-mdc-radio.get-color-tokens($inner-control-warn));\n    }\n  }\n\n  .mat-mdc-list-option {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($inner-control-primary));\n  }\n  .mat-mdc-list-option.mat-accent {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($inner-control-accent));\n  }\n  .mat-mdc-list-option.mat-warn {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($inner-control-warn));\n  }\n\n  // There is no token for activated color on nav list.\n  // TODO(mmalerba): Add a token to MDC or make a custom one.\n  .mat-mdc-list-base.mat-mdc-list-base {\n    @include evolution-mixins.list-selected-ink-color(theming.get-color-from-palette($primary));\n  }\n\n  // TODO(mmalerba): Leaking styles from the old MDC list mixins used in other components can cause\n  //  opacity issues, so we need this override for now. We can remove it when all Angular Material\n  //  components stop using the old MDC mixins.\n  .mat-mdc-list-base .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-list-density-tokens: tokens-mdc-list.get-density-tokens($density-scale);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-density-tokens);\n  }\n\n  // TODO(mmalerba): This is added to maintain the same style MDC used prior to the token-based API,\n  //  to avoid screenshot diffs. We should remove it in favor of following MDC's current style, or\n  //  add custom tokens for it.\n  $clamped-density-scale: theming.clamp-density($density-scale, -5);\n  .mat-mdc-list-item {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-icon {\n      &.mdc-list-item--with-one-line {\n        height: map.get((\n            0: 56px,\n            -1: 52px,\n            -2: 48px,\n            -3: 44px,\n            -4: 40px,\n            -5: 40px,\n        ), $clamped-density-scale);\n      }\n\n      &.mdc-list-item--with-two-lines {\n        height: map.get((\n            0: 72px,\n            -1: 68px,\n            -2: 64px,\n            -3: 60px,\n            -4: 56px,\n            -5: 56px,\n        ), $clamped-density-scale);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-list-typography-tokens: tokens-mdc-list.get-typography-tokens($config);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-typography-tokens);\n  }\n\n  // MDC does not have tokens for the subheader.\n  // TODO(mmalerba): Discuss with MDC about adding them, or create custom tokens.\n  .mdc-list-group__subheader {\n    @include typography-utils.typography-level($config, subtitle-1);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2022 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Internal stylesheet for material list component. Selector '.mdc-*' should\n// only be used in this project.\n\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './evolution-variables' as variables;\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n\n$ripple-target: variables.$ripple-target;\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _high-contrast-mode($query: $query);\n  .mdc-list {\n    @include _static-list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n    @include _list-item-baseline-height($query: $query);\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // TODO(b/254711887): Likely need to update this to adhere to a HCM focus\n    // ring spec.\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _multi-line-item-end-text-baseline($query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-text-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n  .mdc-list-group__subheader {\n    @include _list-group-subheader-margin($query: $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode-border-color($query);\n\n  .mdc-list {\n    @include _typography-list-base($query: $query);\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-size(56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-group__subheader {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n  @include static-styles($query: $query);\n} // end of without-ripple\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// Mixins that apply baseline height for one-, two-, and three- line item\n// container heights. This mixin calls the density mixins so that the styles\n// can be overwritten by future density mixin calls.\n@mixin _list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _two-line-item-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _three-line-item-density(\n    variables.$three-line-item-density-scale,\n    $query: $query\n  );\n}\n\n@mixin _tall-list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-tall-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n  @include _two-line-item-tall-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n}\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n\n  @if ($density-scale and $density-scale != 0) {\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .mdc-list-item__primary-text,\n      .mdc-list-item__secondary-text {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        line-height: 1.4;\n        &::before,\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n// Split the list-base mixin into two sub-mixins, one holding the\n// structural/static styles (static-list-base) and the other holding styles\n// that are themable (typography-list-base). However, the existing list-base\n// mixin need to be preserved as Angular calls this mixin for autocomplete\n// base styling.\n@mixin _typography-list-base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n}\n\n@mixin _static-list-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  @include _typography-list-base($query: $query);\n  @include _static-list-base($query: $query);\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.surface-styles($query: $query);\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-text-baseline($query: feature-targeting.all()) {\n  @include _two-line-item-primary-text-baseline(32px, 20px, $query: $query);\n  @include _two-line-item-overline-text-baseline(28px, 20px, $query: $query);\n  @include _two-line-item-meta-text-baseline($top: 32px, $query: $query);\n}\n\n@mixin _two-line-item-primary-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _multi-line-item-end-text-baseline($query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-text-baseline(\n  $top,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode-border-color($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-list-divider::after {\n    @include feature-targeting.targets($feat-color) {\n      // Color ensures border is shown, but will be overridden by the browser.\n      @include theme.property(border-bottom-color, white);\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n    }\n  }\n}\n\n@mixin _list-group-subheader-margin($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $mdc-list-subheader-virtual-height: 3rem;\n  $mdc-list-subheader-leading: map.get(\n    map.get(typography.$styles, body1),\n    line-height\n  );\n  $mdc-list-subheader-margin: calc(\n    (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) / 2\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $mdc-list-subheader-margin variables.$side-padding;\n  }\n}\n","@use 'sass:map';\n@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;\n@use '@material/tab/tab-theme' as mdc-tab-theme;\n@use '../core/tokens/m2/mdc/tab' as tokens-mdc-tab;\n@use '../core/tokens/m2/mdc/tab-indicator' as tokens-mdc-tab-indicator;\n@use '../core/tokens/m2/mat/tab-header' as tokens-mat-tab-header;\n@use '../core/tokens/m2/mat/tab-header-with-background' as tokens-mat-tab-header-with-background;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n    @include _palette-styles($config, primary);\n\n    &.mat-accent {\n      @include _palette-styles($config, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($config, warn);\n    }\n\n    &.mat-background-primary {\n      @include _background-styles($config, primary);\n    }\n\n    &.mat-background-accent {\n      @include _background-styles($config, accent);\n    }\n\n    &.mat-background-warn {\n      @include _background-styles($config, warn);\n    }\n  }\n}\n\n@mixin _background-styles($initial-config, $palette) {\n  $config: map.merge($initial-config, (primary: map.get($initial-config, $palette)));\n  @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n    tokens-mat-tab-header-with-background.get-color-tokens($config));\n}\n\n@mixin _palette-styles($initial-config, $palette) {\n  $config: map.merge($initial-config, (primary: map.get($initial-config, $palette)));\n  @include mdc-tab-theme.secondary-navigation-tab-theme(\n    tokens-mdc-tab.get-color-tokens($config));\n  @include mdc-tab-indicator-theme.theme(\n    tokens-mdc-tab-indicator.get-color-tokens($config));\n  @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n   tokens-mat-tab-header.get-color-tokens($config));\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-typography-tokens($config));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-typography-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-typography-tokens($config));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-tab-header {\n    @include mdc-tab-theme.secondary-navigation-tab-theme(\n      tokens-mdc-tab.get-density-tokens($density-scale));\n    @include mdc-tab-indicator-theme.theme(\n      tokens-mdc-tab-indicator.get-density-tokens($density-scale));\n    @include token-utils.create-token-values(tokens-mat-tab-header.$prefix,\n      tokens-mat-tab-header.get-density-tokens($density-scale));\n    @include token-utils.create-token-values(tokens-mat-tab-header-with-background.$prefix,\n      tokens-mat-tab-header-with-background.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/style/sass-utils';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/tokens/m2/mdc/checkbox' as tokens-mdc-checkbox;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($config));\n  }\n\n  .mat-mdc-checkbox {\n    &.mat-primary {\n      $primary-config: map.merge($config, (accent: $primary));\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($primary-config));\n    }\n\n    &.mat-warn {\n      $warn-config: map.merge($config, (accent: $warn));\n      @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-color-tokens($warn-config));\n    }\n\n    @include mdc-helpers.using-mdc-theme($config) {\n      // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n    }\n\n    &.mat-mdc-checkbox-disabled label {\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-typography-tokens($config));\n  }\n\n  .mat-mdc-checkbox {\n    @include mdc-helpers.using-mdc-typography($config) {\n      // TODO(mmalerba): Switch to static-styles, theme-styles, and theme once they're available.\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include mdc-checkbox-theme.theme(tokens-mdc-checkbox.get-density-tokens($density-scale));\n  }\n\n  @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n    .mat-mdc-checkbox-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin theme-from-tokens($tokens) {\n  @if ($tokens != ()) {\n    // TODO(mmalerba): Some of the theme styles above are not represented in terms of tokens,\n    //   so this mixin is currently incomplete.\n    @include mdc-checkbox-theme.theme(map.get($tokens, tokens-mdc-checkbox.$prefix));\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density/functions' as mdc-density-functions;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/tokens/m2/mdc/icon-button' as tokens-mdc-icon-button;\n\n@use './button-theme-private';\n@use '../core/theming/theming';\n\n$_icon-size: 24px;\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@function _variable-safe-contrast-tone($value, $is-dark) {\n  @if ($value == 'dark' or $value == 'light' or type-of($value) == 'color') {\n    @return mdc-theme-color.contrast-tone($value);\n  }\n\n  @return if($is-dark, 'light', 'dark');\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $color-tokens: tokens-mdc-icon-button.get-color-tokens($config);\n  $background-palette: map.get($config, background);\n  $surface: theming.get-color-from-palette($background-palette, card);\n  $is-dark: map.get($config, is-dark);\n  $on-surface: if(_variable-safe-contrast-tone($surface, $is-dark) == 'dark', #000, #fff);\n\n  .mat-mdc-icon-button {\n    @include button-theme-private.ripple-theme-styles($config, false);\n    @include mdc-icon-button-theme.theme($color-tokens);\n    @include _ripple-color($on-surface);\n\n    &.mat-primary {\n      $color: theming.get-color-from-palette(map.get($config, primary));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    &.mat-accent {\n      $color: theming.get-color-from-palette(map.get($config, accent));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    &.mat-warn {\n      $color: theming.get-color-from-palette(map.get($config, warn));\n      @include mdc-icon-button-theme.theme((icon-color: $color));\n      @include _ripple-color($color);\n    }\n\n    @include button-theme-private.apply-disabled-style() {\n      $disabled-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n      @include mdc-icon-button-theme.theme((\n        icon-color: $disabled-color,\n        disabled-icon-color: $disabled-color,\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  // Manually apply the expected density theming, and include the padding\n  // as it was applied before\n  $calculated-size: mdc-density-functions.prop-value(\n    $density-config: (\n      size: (\n        default: 48px,\n        maximum: 48px,\n        minimum: 28px,\n      ),\n    ),\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    // Match the styles that used to be present. This is necessary for backwards\n    // compat to match the previous implementations selector count (two classes).\n    @include mdc-icon-button-theme.theme((\n      state-layer-size: $calculated-size,\n    ));\n\n    // TODO: Switch calculated-size to \"var(--mdc-icon-button-state-layer-size)\"\n    // Currently fails validation because the variable is \"undefined\"\n    // in the sass stack.\n    // TODO: Switch icon-size to \"var(--mdc-icon-button-icon-size)\". Currently\n    // fails validation because the variable is \"undefined\" in the sass stack.\n    width: var(--mdc-icon-button-state-layer-size);\n    height: var(--mdc-icon-button-state-layer-size);\n    padding: math.div($calculated-size - $_icon-size, 2);\n\n    @include button-theme-private.touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/fab/fab' as mdc-fab;\n@use '@material/fab/fab-theme' as mdc-fab-theme;\n@use '@material/fab/extended-fab-theme' as mdc-extended-fab-theme;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/fab' as tokens-mdc-fab;\n@use '../core/tokens/m2/mdc/extended-fab' as tokens-mdc-extended-fab;\n@use '../core/typography/typography';\n\n@mixin _fab-variant($config, $foreground, $background) {\n  $color-config: map.merge(\n    $config,\n    (\n      primary: (\n        default: $background,\n        default-contrast: $foreground,\n      ),\n    )\n  );\n  $color-tokens: tokens-mdc-fab.get-color-tokens($color-config);\n  @include mdc-fab-theme.theme($color-tokens);\n\n  --mat-mdc-fab-color: #{$foreground};\n}\n\n@function white-or-black($color, $is-dark) {\n  @return if(mdc-helpers.variable-safe-contrast-tone($color, $is-dark) == 'dark', #000, #fff);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  $is-dark: map.get($config, is-dark);\n  $background: map.get($config, background);\n\n  $surface: theming.get-color-from-palette($background, card);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n\n  $on-surface: white-or-black($surface, $is-dark);\n  $on-primary: white-or-black($primary, $is-dark);\n  $on-accent: white-or-black($accent, $is-dark);\n  $on-warn: white-or-black($warn, $is-dark);\n\n  $disabled: rgba($on-surface, 0.12);\n  $on-disabled: rgba($on-surface, if(map.get($config, is-dark), 0.5, 0.38));\n\n  .mat-mdc-fab,\n  .mat-mdc-mini-fab {\n    // TODO(wagnermaciel): The ripple-theme-styles mixin depends heavily on\n    // being wrapped by using-mdc-theme. This workaround needs to be\n    // revisited w/ a more holistic solution.\n    @include mdc-helpers.using-mdc-theme($config) {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n\n    @include button-theme-private.apply-disabled-style() {\n      @include _fab-variant($config, $on-disabled, $disabled);\n    }\n\n    &.mat-unthemed {\n      @include _fab-variant($config, $on-surface, $surface);\n    }\n\n    &.mat-primary {\n      @include _fab-variant($config, $on-primary, $primary);\n    }\n\n    &.mat-accent {\n      @include _fab-variant($config, $on-accent, $accent);\n    }\n\n    &.mat-warn {\n      @include _fab-variant($config, $on-warn, $warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme)\n  );\n\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-fab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n\n  $typography-tokens: tokens-mdc-extended-fab.get-typography-tokens($config);\n  .mat-mdc-extended-fab {\n    @include mdc-extended-fab-theme.theme($typography-tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-fab') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/snackbar/snackbar-theme' as mdc-snackbar-theme;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mdc/snack-bar' as tokens-mdc-snack-bar;\n@use '../core/tokens/m2/mat/snack-bar' as tokens-mat-snack-bar;\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  .mat-mdc-snack-bar-container {\n    @include mdc-snackbar-theme.theme(tokens-mdc-snack-bar.get-color-tokens($config));\n    @include token-utils.create-token-values(\n      tokens-mat-snack-bar.$prefix,\n      tokens-mat-snack-bar.get-color-tokens($config)\n    );\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  .mat-mdc-snack-bar-container {\n    @include mdc-snackbar-theme.theme(tokens-mdc-snack-bar.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use '../core/tokens/m2/mat/table' as tokens-mat-table;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/token-utils';\n\n@mixin _output-tokens {\n  @if (&) {\n    @content;\n  }\n  @else {\n    html {\n      @content;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include _output-tokens {\n    @include token-utils.create-token-values(tokens-mat-table.$prefix,\n      tokens-mat-table.get-color-tokens($config));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include _output-tokens {\n    @include token-utils.create-token-values(tokens-mat-table.$prefix,\n      tokens-mat-table.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include _output-tokens {\n    @include token-utils.create-token-values(tokens-mat-table.$prefix,\n      tokens-mat-table.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/circular-progress' as tokens-mdc-circular-progress;\n@use '@material/circular-progress/circular-progress-theme' as mdc-circular-progress-theme;\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $mdc-circular-progress-color-tokens: tokens-mdc-circular-progress.get-color-tokens($config);\n\n  .mat-mdc-progress-spinner {\n    @include mdc-circular-progress-theme.theme($mdc-circular-progress-color-tokens);\n\n    &.mat-accent {\n      $color: theming.get-color-from-palette(map.get($config, accent));\n      @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n    }\n\n    &.mat-warn {\n      $color: theming.get-color-from-palette(map.get($config, warn));\n      @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/badge' as tokens-mat-badge;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n// TODO(crisbeto): some of these variables aren't used anymore and should be deleted.\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Internally there are some builds that throw an error if they can't figure out the values\n// of CSS variables during compliation. This flag temporarily enables fallbacks for these builds.\n// Eventually we should clean them up.\n$_emit-fallback-vars: true;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size, $font-size-token) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n\n    @if ($font-size-token) {\n      @include token-utils.use-tokens(tokens-mat-badge.$prefix,\n        tokens-mat-badge.get-token-slots()) {\n        @include token-utils.create-token-slot(font-size, $font-size-token, $_emit-fallback-vars);\n      }\n    }\n  }\n\n  &.mat-badge-above .mat-badge-content {\n    top: math.div(-$size, 2);\n  }\n\n  &.mat-badge-below .mat-badge-content {\n    bottom: math.div(-$size, 2);\n  }\n\n  &.mat-badge-before .mat-badge-content {\n    left: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-before .mat-badge-content {\n    left: auto;\n    right: -$size;\n  }\n\n  &.mat-badge-after .mat-badge-content {\n    right: -$size;\n  }\n\n  [dir='rtl'] &.mat-badge-after .mat-badge-content {\n    right: auto;\n    left: -$size;\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before .mat-badge-content {\n      left: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-before .mat-badge-content {\n      left: auto;\n      right: math.div(-$size, 2);\n    }\n\n    &.mat-badge-after .mat-badge-content {\n      right: math.div(-$size, 2);\n    }\n\n    [dir='rtl'] &.mat-badge-after .mat-badge-content {\n      right: auto;\n      left: math.div(-$size, 2);\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n\n    // The badge should make sure its host is overflow visible so that the badge content\n    // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n    // style `overflow: hidden` so this requires extra specificity so that it does not\n    // depend on style load order.\n    &.mat-badge {\n      overflow: visible;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, background-color);\n      @include token-utils.create-token-slot(color, text-color);\n      @include token-utils.create-token-slot(font-family, text-font, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-size, text-size, $_emit-fallback-vars);\n      @include token-utils.create-token-slot(font-weight, text-weight, $_emit-fallback-vars);\n    }\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-disabled .mat-badge-content {\n    @include token-utils.use-tokens(tokens-mat-badge.$prefix, tokens-mat-badge.get-token-slots()) {\n      @include token-utils.create-token-slot(background-color, disabled-state-background-color);\n      @include token-utils.create-token-slot(color, disabled-state-text-color);\n    }\n  }\n\n  .mat-badge-hidden .mat-badge-content {\n    display: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size, small-size-text-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size, null);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size, large-size-text-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-color-tokens($config));\n  }\n\n  .mat-badge-accent {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($accent));\n  }\n\n  .mat-badge-warn {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.private-get-color-palette-color-tokens($warn));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-badge.$prefix,\n      tokens-mat-badge.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use '../core/tokens/m2/mat/datepicker' as tokens-mat-datepicker;\n@use '../core/theming/theming';\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n@use '../core/typography/typography';\n@use '../button/icon-button-theme';\n\n// TODO(crisbeto): these variables aren't used anymore and should be removed.\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _calendar-color($config, $palette) {\n  $palette-color: theming.get-color-from-palette(map.get($config, $palette));\n  $range-color: tokens-mat-datepicker.private-get-range-background-color($palette-color);\n  $range-tokens: tokens-mat-datepicker.get-range-color-tokens($range-color);\n  $calendar-tokens:\n    tokens-mat-datepicker.private-get-calendar-color-palette-color-tokens($config, $palette);\n\n  @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n    map.merge($calendar-tokens, $range-tokens));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-color-tokens($config));\n  }\n\n  .mat-datepicker-content {\n    &.mat-accent {\n      @include _calendar-color($config, accent);\n    }\n\n    &.mat-warn {\n      @include _calendar-color($config, warn);\n    }\n  }\n\n  .mat-datepicker-toggle-active {\n    &.mat-accent {\n      $accent-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($config, accent);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $accent-tokens);\n    }\n\n    &.mat-warn {\n      $warn-tokens:\n        tokens-mat-datepicker.private-get-toggle-color-palette-color-tokens($config, warn);\n      @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $warn-tokens);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix,\n      tokens-mat-datepicker.get-typography-tokens($config));\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: tokens-mat-datepicker.$private-default-comparison-color,\n  $overlap-color: tokens-mat-datepicker.$private-default-overlap-color,\n  $overlap-selected-color:\n    tokens-mat-datepicker.private-get-default-overlap-selected-color($overlap-color)) {\n  $tokens: tokens-mat-datepicker.get-range-color-tokens(\n    $range-color: $range-color,\n    $comparison-color: $comparison-color,\n    $overlap-color: $overlap-color,\n    $overlap-selected-color: $overlap-selected-color,\n  );\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-datepicker.$prefix, $tokens);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // TODO(crisbeto): move this into the structural styles\n  // once the icon button density is switched to tokens.\n\n  // Regardless of the user-passed density, we want the calendar\n  // previous/next buttons to remain at density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mat/icon' as tokens-mat-icon;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-colors($config, $palette-name) {\n  $palette: map.get($config, $palette-name);\n  $color: theming.get-color-from-palette($palette, text);\n  $tokens: tokens-mat-icon.private-get-icon-color-tokens($color);\n  @include token-utils.create-token-values(tokens-mat-icon.$prefix, $tokens);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-icon.$prefix,\n      tokens-mat-icon.get-color-tokens($config));\n  }\n\n  .mat-icon {\n    &.mat-primary {\n      @include _palette-colors($config, primary);\n    }\n\n    &.mat-accent {\n      @include _palette-colors($config, accent);\n    }\n\n    &.mat-warn {\n      @include _palette-colors($config, warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/density/private/compatibility';\n@use '../core/style/sass-utils';\n@use '../core/tokens/token-utils';\n@use '../core/tokens/m2/mat/stepper' as tokens-mat-stepper;\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-color-tokens($config));\n\n    .mat-step-header.mat-accent {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens(map.get($config, accent)));\n    }\n\n    .mat-step-header.mat-warn {\n      @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n        tokens-mat-stepper.private-get-color-palette-color-tokens(map.get($config, warn)));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-stepper.$prefix,\n      tokens-mat-stepper.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/tokens/m2/mat/toolbar' as tokens-mat-toolbar;\n@use '../core/tokens/token-utils';\n@use '../core/style/sass-utils';\n\n@mixin _palette-styles($palette) {\n  @include token-utils.create-token-values(\n    tokens-mat-toolbar.$prefix,\n    tokens-mat-toolbar.private-get-color-palette-color-tokens(\n      $background-color: theming.get-color-from-palette($palette),\n      $text-color: theming.get-color-from-palette($palette, default-contrast)\n    )\n  );\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      tokens-mat-toolbar.get-color-tokens($config));\n  }\n\n  .mat-toolbar {\n    &.mat-primary {\n      @include _palette-styles(map.get($config, primary));\n    }\n\n    &.mat-accent {\n      @include _palette-styles(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _palette-styles(map.get($config, warn));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      tokens-mat-toolbar.get-typography-tokens($config));\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include sass-utils.current-selector-or-root() {\n    @include token-utils.create-token-values(tokens-mat-toolbar.$prefix,\n      tokens-mat-toolbar.get-density-tokens($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n"],"mappings":"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A,EAAA,IAAA,IAAA,SR+jBJ,CWzmBI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,IAAA,SAAA,CAAA,EAAA,IAAA,IAAA,SRmkBJ,CW7mBI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,SRukBJ,CWjnBI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,SR2kBJ,CWrnBI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,KAAA,SAAA,CAAA,EAAA,IAAA,KAAA,SR+kBJ,CWznBI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SRmlBJ,CW7nBI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SRulBJ,CWjoBI,CAAA,iBAAA,CAAA,0BAAA,CAAA,iBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SR2lBJ,CWroBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SR+lBJ,CWzoBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SRmmBJ,CW7oBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SRumBJ,CWjpBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SR2mBJ,CWrpBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SR+mBJ,CWzpBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SRmnBJ,CW7pBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SRunBJ,CWjqBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SR2nBJ,CWrqBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SR+nBJ,CWzqBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SRmoBJ,CW7qBI,CAAA,kBAAA,CAAA,0BAAA,CAAA,kBH0CA,WAAA,EAAA,KAAA,KAAA,KAAA,KAAA,CAAA,EAAA,KAAA,KAAA,IAAA,SAAA,CAAA,EAAA,IAAA,KAAA,IAAA,SRuoBJ,CWjrBI,CAAA,kBAAA,CAAA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","names":[],"sourceRoot":"webpack:///","file":"styles.c0711f5f1f863c0d.css","x_google_ignoreList":[0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51]}